<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY version SYSTEM "version.xml">
]>
<refentry id="harfbuzz-hb-shape">
<refmeta>
<refentrytitle role="top_of_page" id="harfbuzz-hb-shape.top_of_page">hb-shape</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>HARFBUZZ Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>hb-shape</refname>
<refpurpose>Conversion of text strings into positioned glyphs</refpurpose>
</refnamediv>

<refsect1 id="harfbuzz-hb-shape.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-shape">hb_shape</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-shape-full">hb_shape_full</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-shape-justify">hb_shape_justify</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="hb-shape-list-shapers">hb_shape_list_shapers</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="harfbuzz-hb-shape.includes"><title>Includes</title><synopsis>#include &lt;hb.h&gt;
</synopsis></refsect1>

<refsect1 id="harfbuzz-hb-shape.description" role="desc">
<title role="desc.title">Description</title>
<para>Shaping is the central operation of HarfBuzz. Shaping operates on buffers,
which are sequences of Unicode characters that use the same font and have
the same text direction, script, and language. After shaping the buffer
contains the output glyphs and their positions.</para>

</refsect1>
<refsect1 id="harfbuzz-hb-shape.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="hb-shape" role="function" condition="since:0.9.2">
<title>hb_shape&#160;()</title>
<indexterm zone="hb-shape" role="0.9.2"><primary>hb_shape</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_shape (<parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
          <parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
          <parameter>const <link linkend="hb-feature-t"><type>hb_feature_t</type></link> *features</parameter>,
          <parameter>unsigned <link linkend="int"><type>int</type></link> num_features</parameter>);</programlisting>
<para>Shapes <parameter>buffer</parameter>
 using <parameter>font</parameter>
 turning its Unicode characters content to
positioned glyphs. If <parameter>features</parameter>
 is not <literal>NULL</literal>, it will be used to control the
features applied during shaping. If two <parameter>features</parameter>
 have the same tag but
overlapping ranges the value of the feature with the higher index takes
precedence.</para>
<refsect3 id="hb-shape.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-font-t"><type>hb_font_t</type></link> to use for shaping</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> to shape</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>features</para></entry>
<entry role="parameter_description"><para>an array of user
specified <link linkend="hb-feature-t"><type>hb_feature_t</type></link> or <literal>NULL</literal>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=num_features][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>num_features</para></entry>
<entry role="parameter_description"><para>the length of <parameter>features</parameter>
array</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-shape-full" role="function" condition="since:0.9.2">
<title>hb_shape_full&#160;()</title>
<indexterm zone="hb-shape-full" role="0.9.2"><primary>hb_shape_full</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_shape_full (<parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
               <parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
               <parameter>const <link linkend="hb-feature-t"><type>hb_feature_t</type></link> *features</parameter>,
               <parameter>unsigned <link linkend="int"><type>int</type></link> num_features</parameter>,
               <parameter>const <link linkend="char"><type>char</type></link> * const *shaper_list</parameter>);</programlisting>
<para>See <link linkend="hb-shape"><function>hb_shape()</function></link> for details. If <parameter>shaper_list</parameter>
 is not <literal>NULL</literal>, the specified
shapers will be used in the given order, otherwise the default shapers list
will be used.</para>
<refsect3 id="hb-shape-full.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-font-t"><type>hb_font_t</type></link> to use for shaping</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> to shape</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>features</para></entry>
<entry role="parameter_description"><para>an array of user
specified <link linkend="hb-feature-t"><type>hb_feature_t</type></link> or <literal>NULL</literal>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=num_features][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>num_features</para></entry>
<entry role="parameter_description"><para>the length of <parameter>features</parameter>
array</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>shaper_list</para></entry>
<entry role="parameter_description"><para>a <literal>NULL</literal>-terminated
array of shapers to use or <literal>NULL</literal>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> zero-terminated=1][<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-shape-full.returns" role="returns">
<title>Returns</title>
<para> false if all shapers failed, true otherwise</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-shape-justify" role="function">
<title>hb_shape_justify&#160;()</title>
<indexterm zone="hb-shape-justify"><primary>hb_shape_justify</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_shape_justify (<parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
                  <parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                  <parameter>const <link linkend="hb-feature-t"><type>hb_feature_t</type></link> *features</parameter>,
                  <parameter>unsigned <link linkend="int"><type>int</type></link> num_features</parameter>,
                  <parameter>const <link linkend="char"><type>char</type></link> * const *shaper_list</parameter>,
                  <parameter><link linkend="float"><type>float</type></link> min_target_advance</parameter>,
                  <parameter><link linkend="float"><type>float</type></link> max_target_advance</parameter>,
                  <parameter><link linkend="float"><type>float</type></link> *advance</parameter>,
                  <parameter><link linkend="hb-tag-t"><type>hb_tag_t</type></link> *var_tag</parameter>,
                  <parameter><link linkend="float"><type>float</type></link> *var_value</parameter>);</programlisting>
<para>See <link linkend="hb-shape-full"><function>hb_shape_full()</function></link> for basic details. If <parameter>shaper_list</parameter>
 is not <literal>NULL</literal>, the specified
shapers will be used in the given order, otherwise the default shapers list
will be used.</para>
<para>In addition, justify the shaping results such that the shaping results reach
the target advance width/height, depending on the buffer direction.</para>
<para>If the advance of the buffer shaped with <link linkend="hb-shape-full"><function>hb_shape_full()</function></link> is already known,
put that in *advance. Otherwise set *advance to zero.</para>
<para>This API is currently experimental and will probably change in the future.</para>
<refsect3 id="hb-shape-justify.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>a mutable <link linkend="hb-font-t"><type>hb_font_t</type></link> to use for shaping</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> to shape</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>features</para></entry>
<entry role="parameter_description"><para>an array of user
specified <link linkend="hb-feature-t"><type>hb_feature_t</type></link> or <literal>NULL</literal>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=num_features][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>num_features</para></entry>
<entry role="parameter_description"><para>the length of <parameter>features</parameter>
array</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>shaper_list</para></entry>
<entry role="parameter_description"><para>a <literal>NULL</literal>-terminated
array of shapers to use or <literal>NULL</literal>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> zero-terminated=1][<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>min_target_advance</para></entry>
<entry role="parameter_description"><para>Minimum advance width/height to aim for.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>max_target_advance</para></entry>
<entry role="parameter_description"><para>Maximum advance width/height to aim for.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>advance</para></entry>
<entry role="parameter_description"><para>Input/output advance width/height of the buffer. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>inout</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>var_tag</para></entry>
<entry role="parameter_description"><para>Variation-axis tag used for justification. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>var_value</para></entry>
<entry role="parameter_description"><para>Variation-axis value used to reach target justification. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-shape-justify.returns" role="returns">
<title>Returns</title>
<para> false if all shapers failed, true otherwise</para>
<para>XSince: EXPERIMENTAL</para>
</refsect3></refsect2>
<refsect2 id="hb-shape-list-shapers" role="function" condition="since:0.9.2">
<title>hb_shape_list_shapers&#160;()</title>
<indexterm zone="hb-shape-list-shapers" role="0.9.2"><primary>hb_shape_list_shapers</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
hb_shape_list_shapers (<parameter><type>void</type></parameter>);</programlisting>
<para>Retrieves the list of shapers supported by HarfBuzz.</para>
<refsect3 id="hb-shape-list-shapers.returns" role="returns">
<title>Returns</title>
<para>an array of
constant strings. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>array</acronym> zero-terminated=1]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>

</refsect1>

</refentry>
