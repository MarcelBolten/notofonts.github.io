<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY version SYSTEM "version.xml">
]>
<refentry id="harfbuzz-hb-buffer">
<refmeta>
<refentrytitle role="top_of_page" id="harfbuzz-hb-buffer.top_of_page">hb-buffer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>HARFBUZZ Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>hb-buffer</refname>
<refpurpose>Input and output buffers</refpurpose>
</refnamediv>

<refsect1 id="harfbuzz-hb-buffer.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-create">hb_buffer_create</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-allocation-successful">hb_buffer_allocation_successful</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-create-similar">hb_buffer_create_similar</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-get-empty">hb_buffer_get_empty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-reference">hb_buffer_reference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-destroy">hb_buffer_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-user-data">hb_buffer_set_user_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-get-user-data">hb_buffer_get_user_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-reset">hb_buffer_reset</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-clear-contents">hb_buffer_clear_contents</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-pre-allocate">hb_buffer_pre_allocate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-add">hb_buffer_add</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-add-codepoints">hb_buffer_add_codepoints</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-add-utf32">hb_buffer_add_utf32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-add-utf16">hb_buffer_add_utf16</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-add-utf8">hb_buffer_add_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-add-latin1">hb_buffer_add_latin1</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-append">hb_buffer_append</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-content-type">hb_buffer_set_content_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-content-type-t"><returnvalue>hb_buffer_content_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-content-type">hb_buffer_get_content_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-direction">hb_buffer_set_direction</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-direction-t"><returnvalue>hb_direction_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-direction">hb_buffer_get_direction</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-script">hb_buffer_set_script</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-script-t"><returnvalue>hb_script_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-script">hb_buffer_get_script</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-language">hb_buffer_set_language</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-language-t"><returnvalue>hb_language_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-language">hb_buffer_get_language</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-flags">hb_buffer_set_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-flags-t"><returnvalue>hb_buffer_flags_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-flags">hb_buffer_get_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-cluster-level">hb_buffer_set_cluster_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-cluster-level-t"><returnvalue>hb_buffer_cluster_level_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-cluster-level">hb_buffer_get_cluster_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-length">hb_buffer_set_length</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-length">hb_buffer_get_length</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-segment-properties">hb_buffer_set_segment_properties</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-segment-properties">hb_buffer_get_segment_properties</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-guess-segment-properties">hb_buffer_guess_segment_properties</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-unicode-funcs">hb_buffer_set_unicode_funcs</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-unicode-funcs-t"><returnvalue>hb_unicode_funcs_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-get-unicode-funcs">hb_buffer_get_unicode_funcs</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-glyph-info-t"><returnvalue>hb_glyph_info_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-get-glyph-infos">hb_buffer_get_glyph_infos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-glyph-flags-t"><returnvalue>hb_glyph_flags_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-glyph-info-get-glyph-flags">hb_glyph_info_get_glyph_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-glyph-position-t"><returnvalue>hb_glyph_position_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-get-glyph-positions">hb_buffer_get_glyph_positions</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-has-positions">hb_buffer_has_positions</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-invisible-glyph">hb_buffer_set_invisible_glyph</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-codepoint-t"><returnvalue>hb_codepoint_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-invisible-glyph">hb_buffer_get_invisible_glyph</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-not-found-glyph">hb_buffer_set_not_found_glyph</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-codepoint-t"><returnvalue>hb_codepoint_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-not-found-glyph">hb_buffer_get_not_found_glyph</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-replacement-codepoint">hb_buffer_set_replacement_codepoint</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-codepoint-t"><returnvalue>hb_codepoint_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-get-replacement-codepoint">hb_buffer_get_replacement_codepoint</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-normalize-glyphs">hb_buffer_normalize_glyphs</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-reverse">hb_buffer_reverse</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-reverse-range">hb_buffer_reverse_range</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-reverse-clusters">hb_buffer_reverse_clusters</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-serialize">hb_buffer_serialize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-serialize-glyphs">hb_buffer_serialize_glyphs</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-deserialize-glyphs">hb_buffer_deserialize_glyphs</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-serialize-unicode">hb_buffer_serialize_unicode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-deserialize-unicode">hb_buffer_deserialize_unicode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-serialize-format-t"><returnvalue>hb_buffer_serialize_format_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-serialize-format-from-string">hb_buffer_serialize_format_from_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="hb-buffer-serialize-format-to-string">hb_buffer_serialize_format_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="hb-buffer-serialize-list-formats">hb_buffer_serialize_list_formats</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-segment-properties-equal">hb_segment_properties_equal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-segment-properties-hash">hb_segment_properties_hash</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-segment-properties-overlay">hb_segment_properties_overlay</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-buffer-diff-flags-t"><returnvalue>hb_buffer_diff_flags_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-diff">hb_buffer_diff</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="hb-buffer-message-func-t">*hb_buffer_message_func_t</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="hb-buffer-set-message-func">hb_buffer_set_message_func</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="harfbuzz-hb-buffer.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="HB-SEGMENT-PROPERTIES-DEFAULT:CAPS">HB_SEGMENT_PROPERTIES_DEFAULT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="HB-BUFFER-REPLACEMENT-CODEPOINT-DEFAULT:CAPS">HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="hb-buffer-t">hb_buffer_t</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="hb-glyph-info-t">hb_glyph_info_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-glyph-flags-t">hb_glyph_flags_t</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="hb-glyph-position-t">hb_glyph_position_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-buffer-content-type-t">hb_buffer_content_type_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-buffer-flags-t">hb_buffer_flags_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-buffer-cluster-level-t">hb_buffer_cluster_level_t</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="hb-segment-properties-t">hb_segment_properties_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-buffer-serialize-format-t">hb_buffer_serialize_format_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-buffer-serialize-flags-t">hb_buffer_serialize_flags_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="hb-buffer-diff-flags-t">hb_buffer_diff_flags_t</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="harfbuzz-hb-buffer.includes"><title>Includes</title><synopsis>#include &lt;hb.h&gt;
</synopsis></refsect1>

<refsect1 id="harfbuzz-hb-buffer.description" role="desc">
<title role="desc.title">Description</title>
<para>Buffers serve a dual role in HarfBuzz; before shaping, they hold
the input characters that are passed to <link linkend="hb-shape"><function>hb_shape()</function></link>, and after
shaping they hold the output glyphs.</para>
<para>The input buffer is a sequence of Unicode codepoints, with
associated attributes such as direction and script.  The output
buffer is a sequence of glyphs, with associated attributes such
as position and cluster.</para>

</refsect1>
<refsect1 id="harfbuzz-hb-buffer.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="hb-buffer-create" role="function" condition="since:0.9.2">
<title>hb_buffer_create&#160;()</title>
<indexterm zone="hb-buffer-create" role="0.9.2"><primary>hb_buffer_create</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
hb_buffer_create (<parameter><type>void</type></parameter>);</programlisting>
<para>Creates a new <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> with all properties to defaults.</para>
<refsect3 id="hb-buffer-create.returns" role="returns">
<title>Returns</title>
<para>A newly allocated <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> with a reference count of 1. The initial
reference count should be released with <link linkend="hb-buffer-destroy"><function>hb_buffer_destroy()</function></link> when you are done
using the <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>. This function never returns <literal>NULL</literal>. If memory cannot
be allocated, a special <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> object will be returned on which
<link linkend="hb-buffer-allocation-successful"><function>hb_buffer_allocation_successful()</function></link> returns <literal>false</literal>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-allocation-successful" role="function" condition="since:0.9.2">
<title>hb_buffer_allocation_successful&#160;()</title>
<indexterm zone="hb-buffer-allocation-successful" role="0.9.2"><primary>hb_buffer_allocation_successful</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_allocation_successful (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Check if allocating memory for the buffer succeeded.</para>
<refsect3 id="hb-buffer-allocation-successful.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-allocation-successful.returns" role="returns">
<title>Returns</title>
<para><literal>true</literal> if <parameter>buffer</parameter>
memory allocation succeeded, <literal>false</literal> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-create-similar" role="function" condition="since:3.3.0">
<title>hb_buffer_create_similar&#160;()</title>
<indexterm zone="hb-buffer-create-similar" role="3.3.0"><primary>hb_buffer_create_similar</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
hb_buffer_create_similar (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *src</parameter>);</programlisting>
<para>Creates a new <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>, similar to <link linkend="hb-buffer-create"><function>hb_buffer_create()</function></link>. The only
difference is that the buffer is configured similarly to <parameter>src</parameter>
.</para>
<refsect3 id="hb-buffer-create-similar.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-create-similar.returns" role="returns">
<title>Returns</title>
<para>A newly allocated <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>, similar to <link linkend="hb-buffer-create"><function>hb_buffer_create()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-3.3.0">3.3.0</link></para></refsect2>
<refsect2 id="hb-buffer-get-empty" role="function" condition="since:0.9.2">
<title>hb_buffer_get_empty&#160;()</title>
<indexterm zone="hb-buffer-get-empty" role="0.9.2"><primary>hb_buffer_get_empty</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
hb_buffer_get_empty (<parameter><type>void</type></parameter>);</programlisting>
<para>Fetches an empty <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>.</para>
<refsect3 id="hb-buffer-get-empty.returns" role="returns">
<title>Returns</title>
<para>The empty buffer. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-reference" role="function" condition="since:0.9.2">
<title>hb_buffer_reference&#160;()</title>
<indexterm zone="hb-buffer-reference" role="0.9.2"><primary>hb_buffer_reference</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-t"><returnvalue>hb_buffer_t</returnvalue></link>&#160;*
hb_buffer_reference (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Increases the reference count on <parameter>buffer</parameter>
 by one. This prevents <parameter>buffer</parameter>
 from
being destroyed until a matching call to <link linkend="hb-buffer-destroy"><function>hb_buffer_destroy()</function></link> is made.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="hb-buffer-reference.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-reference.returns" role="returns">
<title>Returns</title>
<para>The referenced <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-destroy" role="function" condition="since:0.9.2">
<title>hb_buffer_destroy&#160;()</title>
<indexterm zone="hb-buffer-destroy" role="0.9.2"><primary>hb_buffer_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_destroy (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Deallocate the <parameter>buffer</parameter>
.
Decreases the reference count on <parameter>buffer</parameter>
 by one. If the result is zero, then
<parameter>buffer</parameter>
 and all associated resources are freed. See <link linkend="hb-buffer-reference"><function>hb_buffer_reference()</function></link>.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="hb-buffer-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-set-user-data" role="function" condition="since:0.9.2">
<title>hb_buffer_set_user_data&#160;()</title>
<indexterm zone="hb-buffer-set-user-data" role="0.9.2"><primary>hb_buffer_set_user_data</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_set_user_data (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                         <parameter><link linkend="hb-user-data-key-t"><type>hb_user_data_key_t</type></link> *key</parameter>,
                         <parameter><link linkend="void"><type>void</type></link> *data</parameter>,
                         <parameter><link linkend="hb-destroy-func-t"><type>hb_destroy_func_t</type></link> destroy</parameter>,
                         <parameter><link linkend="hb-bool-t"><type>hb_bool_t</type></link> replace</parameter>);</programlisting>
<para>Attaches a user-data key/data pair to the specified buffer.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="hb-buffer-set-user-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>The user-data key</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>A pointer to the user data</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>destroy</para></entry>
<entry role="parameter_description"><para>A callback to call when <parameter>data</parameter>
is not needed anymore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>replace</para></entry>
<entry role="parameter_description"><para>Whether to replace an existing data with the same key</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-set-user-data.returns" role="returns">
<title>Returns</title>
<para> <literal>true</literal> if success, <literal>false</literal> otherwise</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-user-data" role="function" condition="since:0.9.2">
<title>hb_buffer_get_user_data&#160;()</title>
<indexterm zone="hb-buffer-get-user-data" role="0.9.2"><primary>hb_buffer_get_user_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
hb_buffer_get_user_data (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                         <parameter><link linkend="hb-user-data-key-t"><type>hb_user_data_key_t</type></link> *key</parameter>);</programlisting>
<para>Fetches the user data associated with the specified key,
attached to the specified buffer.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="hb-buffer-get-user-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>The user-data key to query</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-user-data.returns" role="returns">
<title>Returns</title>
<para>A pointer to the user data. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-reset" role="function" condition="since:0.9.2">
<title>hb_buffer_reset&#160;()</title>
<indexterm zone="hb-buffer-reset" role="0.9.2"><primary>hb_buffer_reset</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_reset (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Resets the buffer to its initial status, as if it was just newly created
with <link linkend="hb-buffer-create"><function>hb_buffer_create()</function></link>.</para>
<refsect3 id="hb-buffer-reset.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-clear-contents" role="function" condition="since:0.9.11">
<title>hb_buffer_clear_contents&#160;()</title>
<indexterm zone="hb-buffer-clear-contents" role="0.9.11"><primary>hb_buffer_clear_contents</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_clear_contents (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Similar to <link linkend="hb-buffer-reset"><function>hb_buffer_reset()</function></link>, but does not clear the Unicode functions and
the replacement code point.</para>
<refsect3 id="hb-buffer-clear-contents.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.11">0.9.11</link></para></refsect2>
<refsect2 id="hb-buffer-pre-allocate" role="function" condition="since:0.9.2">
<title>hb_buffer_pre_allocate&#160;()</title>
<indexterm zone="hb-buffer-pre-allocate" role="0.9.2"><primary>hb_buffer_pre_allocate</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_pre_allocate (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                        <parameter>unsigned <link linkend="int"><type>int</type></link> size</parameter>);</programlisting>
<para>Pre allocates memory for <parameter>buffer</parameter>
 to fit at least <parameter>size</parameter>
 number of items.</para>
<refsect3 id="hb-buffer-pre-allocate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Number of items to pre allocate.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-pre-allocate.returns" role="returns">
<title>Returns</title>
<para><literal>true</literal> if <parameter>buffer</parameter>
memory allocation succeeded, <literal>false</literal> otherwise</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-add" role="function" condition="since:0.9.7">
<title>hb_buffer_add&#160;()</title>
<indexterm zone="hb-buffer-add" role="0.9.7"><primary>hb_buffer_add</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_add (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
               <parameter><link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> codepoint</parameter>,
               <parameter>unsigned <link linkend="int"><type>int</type></link> cluster</parameter>);</programlisting>
<para>Appends a character with the Unicode value of <parameter>codepoint</parameter>
 to <parameter>buffer</parameter>
, and
gives it the initial cluster value of <parameter>cluster</parameter>
. Clusters can be any thing
the client wants, they are usually used to refer to the index of the
character in the input text stream and are output in
<link linkend="hb-glyph-info-t.cluster"><type>hb_glyph_info_t.cluster</type></link> field.</para>
<para>This function does not check the validity of <parameter>codepoint</parameter>
, it is up to the
caller to ensure it is a valid Unicode code point.</para>
<refsect3 id="hb-buffer-add.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>codepoint</para></entry>
<entry role="parameter_description"><para>A Unicode code point.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cluster</para></entry>
<entry role="parameter_description"><para>The cluster value of <parameter>codepoint</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-add-codepoints" role="function" condition="since:0.9.31">
<title>hb_buffer_add_codepoints&#160;()</title>
<indexterm zone="hb-buffer-add-codepoints" role="0.9.31"><primary>hb_buffer_add_codepoints</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_add_codepoints (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                          <parameter>const <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> *text</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> text_length</parameter>,
                          <parameter>unsigned <link linkend="int"><type>int</type></link> item_offset</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> item_length</parameter>);</programlisting>
<para>Appends characters from <parameter>text</parameter>
 array to <parameter>buffer</parameter>
. The <parameter>item_offset</parameter>
 is the
position of the first character from <parameter>text</parameter>
 that will be appended, and
<parameter>item_length</parameter>
 is the number of character. When shaping part of a larger text
(e.g. a run of text from a paragraph), instead of passing just the substring
corresponding to the run, it is preferable to pass the whole
paragraph and specify the run start and length as <parameter>item_offset</parameter>
 and
<parameter>item_length</parameter>
, respectively, to give HarfBuzz the full context to be able,
for example, to do cross-run Arabic shaping or properly handle combining
marks at stat of run.</para>
<para>This function does not check the validity of <parameter>text</parameter>
, it is up to the caller
to ensure it contains a valid Unicode scalar values.  In contrast,
<link linkend="hb-buffer-add-utf32"><function>hb_buffer_add_utf32()</function></link> can be used that takes similar input but performs
sanity-check on the input.</para>
<refsect3 id="hb-buffer-add-codepoints.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>a <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> to append characters to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>an array of Unicode code points to append. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=text_length]</emphasis></entry></row>
<row><entry role="parameter_name"><para>text_length</para></entry>
<entry role="parameter_description"><para>the length of the <parameter>text</parameter>
, or -1 if it is <literal>NULL</literal> terminated.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_offset</para></entry>
<entry role="parameter_description"><para>the offset of the first code point to add to the <parameter>buffer</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_length</para></entry>
<entry role="parameter_description"><para>the number of code points to add to the <parameter>buffer</parameter>
, or -1 for the
end of <parameter>text</parameter>
(assuming it is <literal>NULL</literal> terminated).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.31">0.9.31</link></para></refsect2>
<refsect2 id="hb-buffer-add-utf32" role="function" condition="since:0.9.2">
<title>hb_buffer_add_utf32&#160;()</title>
<indexterm zone="hb-buffer-add-utf32" role="0.9.2"><primary>hb_buffer_add_utf32</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_add_utf32 (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                     <parameter>const <link linkend="uint32-t"><type>uint32_t</type></link> *text</parameter>,
                     <parameter><link linkend="int"><type>int</type></link> text_length</parameter>,
                     <parameter>unsigned <link linkend="int"><type>int</type></link> item_offset</parameter>,
                     <parameter><link linkend="int"><type>int</type></link> item_length</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-add-codepoints"><function>hb_buffer_add_codepoints()</function></link>.</para>
<para>Replaces invalid UTF-32 characters with the <parameter>buffer</parameter>
 replacement code point,
see <link linkend="hb-buffer-set-replacement-codepoint"><function>hb_buffer_set_replacement_codepoint()</function></link>.</para>
<refsect3 id="hb-buffer-add-utf32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>An array of UTF-32 characters to append. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=text_length]</emphasis></entry></row>
<row><entry role="parameter_name"><para>text_length</para></entry>
<entry role="parameter_description"><para>The length of the <parameter>text</parameter>
, or -1 if it is <literal>NULL</literal> terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_offset</para></entry>
<entry role="parameter_description"><para>The offset of the first character to add to the <parameter>buffer</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_length</para></entry>
<entry role="parameter_description"><para>The number of characters to add to the <parameter>buffer</parameter>
, or -1 for the
end of <parameter>text</parameter>
(assuming it is <literal>NULL</literal> terminated)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-add-utf16" role="function" condition="since:0.9.2">
<title>hb_buffer_add_utf16&#160;()</title>
<indexterm zone="hb-buffer-add-utf16" role="0.9.2"><primary>hb_buffer_add_utf16</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_add_utf16 (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                     <parameter>const <link linkend="uint16-t"><type>uint16_t</type></link> *text</parameter>,
                     <parameter><link linkend="int"><type>int</type></link> text_length</parameter>,
                     <parameter>unsigned <link linkend="int"><type>int</type></link> item_offset</parameter>,
                     <parameter><link linkend="int"><type>int</type></link> item_length</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-add-codepoints"><function>hb_buffer_add_codepoints()</function></link>.</para>
<para>Replaces invalid UTF-16 characters with the <parameter>buffer</parameter>
 replacement code point,
see <link linkend="hb-buffer-set-replacement-codepoint"><function>hb_buffer_set_replacement_codepoint()</function></link>.</para>
<refsect3 id="hb-buffer-add-utf16.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>An array of UTF-16 characters to append. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=text_length]</emphasis></entry></row>
<row><entry role="parameter_name"><para>text_length</para></entry>
<entry role="parameter_description"><para>The length of the <parameter>text</parameter>
, or -1 if it is <literal>NULL</literal> terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_offset</para></entry>
<entry role="parameter_description"><para>The offset of the first character to add to the <parameter>buffer</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_length</para></entry>
<entry role="parameter_description"><para>The number of characters to add to the <parameter>buffer</parameter>
, or -1 for the
end of <parameter>text</parameter>
(assuming it is <literal>NULL</literal> terminated)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-add-utf8" role="function" condition="since:0.9.2">
<title>hb_buffer_add_utf8&#160;()</title>
<indexterm zone="hb-buffer-add-utf8" role="0.9.2"><primary>hb_buffer_add_utf8</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_add_utf8 (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                    <parameter>const <link linkend="char"><type>char</type></link> *text</parameter>,
                    <parameter><link linkend="int"><type>int</type></link> text_length</parameter>,
                    <parameter>unsigned <link linkend="int"><type>int</type></link> item_offset</parameter>,
                    <parameter><link linkend="int"><type>int</type></link> item_length</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-add-codepoints"><function>hb_buffer_add_codepoints()</function></link>.</para>
<para>Replaces invalid UTF-8 characters with the <parameter>buffer</parameter>
 replacement code point,
see <link linkend="hb-buffer-set-replacement-codepoint"><function>hb_buffer_set_replacement_codepoint()</function></link>.</para>
<refsect3 id="hb-buffer-add-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>An array of UTF-8
characters to append. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=text_length][<acronym>element-type</acronym> uint8_t]</emphasis></entry></row>
<row><entry role="parameter_name"><para>text_length</para></entry>
<entry role="parameter_description"><para>The length of the <parameter>text</parameter>
, or -1 if it is <literal>NULL</literal> terminated.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_offset</para></entry>
<entry role="parameter_description"><para>The offset of the first character to add to the <parameter>buffer</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_length</para></entry>
<entry role="parameter_description"><para>The number of characters to add to the <parameter>buffer</parameter>
, or -1 for the
end of <parameter>text</parameter>
(assuming it is <literal>NULL</literal> terminated).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-add-latin1" role="function" condition="since:0.9.39">
<title>hb_buffer_add_latin1&#160;()</title>
<indexterm zone="hb-buffer-add-latin1" role="0.9.39"><primary>hb_buffer_add_latin1</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_add_latin1 (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                      <parameter>const <link linkend="uint8-t"><type>uint8_t</type></link> *text</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> text_length</parameter>,
                      <parameter>unsigned <link linkend="int"><type>int</type></link> item_offset</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> item_length</parameter>);</programlisting>
<para>Similar to <link linkend="hb-buffer-add-codepoints"><function>hb_buffer_add_codepoints()</function></link>, but allows only access to first 256
Unicode code points that can fit in 8-bit strings.</para>
<note>Has nothing to do with non-Unicode Latin-1 encoding.</note>
<refsect3 id="hb-buffer-add-latin1.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>an array of UTF-8
characters to append. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=text_length][<acronym>element-type</acronym> uint8_t]</emphasis></entry></row>
<row><entry role="parameter_name"><para>text_length</para></entry>
<entry role="parameter_description"><para>the length of the <parameter>text</parameter>
, or -1 if it is <literal>NULL</literal> terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_offset</para></entry>
<entry role="parameter_description"><para>the offset of the first character to add to the <parameter>buffer</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>item_length</para></entry>
<entry role="parameter_description"><para>the number of characters to add to the <parameter>buffer</parameter>
, or -1 for the
end of <parameter>text</parameter>
(assuming it is <literal>NULL</literal> terminated)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.39">0.9.39</link></para></refsect2>
<refsect2 id="hb-buffer-append" role="function" condition="since:1.5.0">
<title>hb_buffer_append&#160;()</title>
<indexterm zone="hb-buffer-append" role="1.5.0"><primary>hb_buffer_append</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_append (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                  <parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *source</parameter>,
                  <parameter>unsigned <link linkend="int"><type>int</type></link> start</parameter>,
                  <parameter>unsigned <link linkend="int"><type>int</type></link> end</parameter>);</programlisting>
<para>Append (part of) contents of another buffer to this buffer.</para>
<refsect3 id="hb-buffer-append.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>source</para></entry>
<entry role="parameter_description"><para>source <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>start index into source buffer to copy.  Use 0 to copy from start of buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end</para></entry>
<entry role="parameter_description"><para>end index into source buffer to copy.  Use <parameter>HB_FEATURE_GLOBAL_END</parameter>
to copy to end of buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.5.0">1.5.0</link></para></refsect2>
<refsect2 id="hb-buffer-set-content-type" role="function" condition="since:0.9.5">
<title>hb_buffer_set_content_type&#160;()</title>
<indexterm zone="hb-buffer-set-content-type" role="0.9.5"><primary>hb_buffer_set_content_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_content_type (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                            <parameter><link linkend="hb-buffer-content-type-t"><type>hb_buffer_content_type_t</type></link> content_type</parameter>);</programlisting>
<para>Sets the type of <parameter>buffer</parameter>
 contents. Buffers are either empty, contain
characters (before shaping), or contain glyphs (the result of shaping).</para>
<para>You rarely need to call this function, since a number of other
functions transition the content type for you. Namely:</para>
<itemizedlist>
<listitem>
<para>A newly created buffer starts with content type
<link linkend="HB-BUFFER-CONTENT-TYPE-INVALID:CAPS"><literal>HB_BUFFER_CONTENT_TYPE_INVALID</literal></link>. Calling <link linkend="hb-buffer-reset"><function>hb_buffer_reset()</function></link>,
<link linkend="hb-buffer-clear-contents"><function>hb_buffer_clear_contents()</function></link>, as well as calling <link linkend="hb-buffer-set-length"><function>hb_buffer_set_length()</function></link>
with an argument of zero all set the buffer content type to invalid
as well.</para>
</listitem>
<listitem>
<para>Calling <link linkend="hb-buffer-add-utf8"><function>hb_buffer_add_utf8()</function></link>, <link linkend="hb-buffer-add-utf16"><function>hb_buffer_add_utf16()</function></link>,
<link linkend="hb-buffer-add-utf32"><function>hb_buffer_add_utf32()</function></link>, <link linkend="hb-buffer-add-codepoints"><function>hb_buffer_add_codepoints()</function></link> and
<link linkend="hb-buffer-add-latin1"><function>hb_buffer_add_latin1()</function></link> expect that buffer is either empty and
have a content type of invalid, or that buffer content type is
<link linkend="HB-BUFFER-CONTENT-TYPE-UNICODE:CAPS"><literal>HB_BUFFER_CONTENT_TYPE_UNICODE</literal></link>, and they also set the content
type to Unicode if they added anything to an empty buffer.</para>
</listitem>
<listitem>
<para>Finally <link linkend="hb-shape"><function>hb_shape()</function></link> and <link linkend="hb-shape-full"><function>hb_shape_full()</function></link> expect that the buffer
is either empty and have content type of invalid, or that buffer
content type is <link linkend="HB-BUFFER-CONTENT-TYPE-UNICODE:CAPS"><literal>HB_BUFFER_CONTENT_TYPE_UNICODE</literal></link>, and upon
success they set the buffer content type to
<link linkend="HB-BUFFER-CONTENT-TYPE-GLYPHS:CAPS"><literal>HB_BUFFER_CONTENT_TYPE_GLYPHS</literal></link>.</para>
</listitem>
</itemizedlist>
<para>The above transitions are designed such that one can use a buffer
in a loop of "reset : add-text : shape" without needing to ever
modify the content type manually.</para>
<refsect3 id="hb-buffer-set-content-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>The type of buffer contents to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.5">0.9.5</link></para></refsect2>
<refsect2 id="hb-buffer-get-content-type" role="function" condition="since:0.9.5">
<title>hb_buffer_get_content_type&#160;()</title>
<indexterm zone="hb-buffer-get-content-type" role="0.9.5"><primary>hb_buffer_get_content_type</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-content-type-t"><returnvalue>hb_buffer_content_type_t</returnvalue></link>
hb_buffer_get_content_type (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Fetches the type of <parameter>buffer</parameter>
 contents. Buffers are either empty, contain
characters (before shaping), or contain glyphs (the result of shaping).</para>
<refsect3 id="hb-buffer-get-content-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-content-type.returns" role="returns">
<title>Returns</title>
<para>The type of <parameter>buffer</parameter>
contents</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.5">0.9.5</link></para></refsect2>
<refsect2 id="hb-buffer-set-direction" role="function" condition="since:0.9.2">
<title>hb_buffer_set_direction&#160;()</title>
<indexterm zone="hb-buffer-set-direction" role="0.9.2"><primary>hb_buffer_set_direction</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_direction (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                         <parameter><link linkend="hb-direction-t"><type>hb_direction_t</type></link> direction</parameter>);</programlisting>
<para>Set the text flow direction of the buffer. No shaping can happen without
setting <parameter>buffer</parameter>
 direction, and it controls the visual direction for the
output glyphs; for RTL direction the glyphs will be reversed. Many layout
features depend on the proper setting of the direction, for example,
reversing RTL text before shaping, then shaping with LTR direction is not
the same as keeping the text in logical order and shaping with RTL
direction.</para>
<refsect3 id="hb-buffer-set-direction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>direction</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-direction-t"><type>hb_direction_t</type></link> of the <parameter>buffer</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-direction" role="function" condition="since:0.9.2">
<title>hb_buffer_get_direction&#160;()</title>
<indexterm zone="hb-buffer-get-direction" role="0.9.2"><primary>hb_buffer_get_direction</primary></indexterm>
<programlisting language="C"><link linkend="hb-direction-t"><returnvalue>hb_direction_t</returnvalue></link>
hb_buffer_get_direction (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-set-direction"><function>hb_buffer_set_direction()</function></link></para>
<refsect3 id="hb-buffer-get-direction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-direction.returns" role="returns">
<title>Returns</title>
<para>The direction of the <parameter>buffer</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-set-script" role="function" condition="since:0.9.2">
<title>hb_buffer_set_script&#160;()</title>
<indexterm zone="hb-buffer-set-script" role="0.9.2"><primary>hb_buffer_set_script</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_script (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                      <parameter><link linkend="hb-script-t"><type>hb_script_t</type></link> script</parameter>);</programlisting>
<para>Sets the script of <parameter>buffer</parameter>
 to <parameter>script</parameter>
.</para>
<para>Script is crucial for choosing the proper shaping behaviour for scripts that
require it (e.g. Arabic) and the which OpenType features defined in the font
to be applied.</para>
<para>You can pass one of the predefined <link linkend="hb-script-t"><type>hb_script_t</type></link> values, or use
<link linkend="hb-script-from-string"><function>hb_script_from_string()</function></link> or <link linkend="hb-script-from-iso15924-tag"><function>hb_script_from_iso15924_tag()</function></link> to get the
corresponding script from an ISO 15924 script tag.</para>
<refsect3 id="hb-buffer-set-script.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>script</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-script-t"><type>hb_script_t</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-script" role="function" condition="since:0.9.2">
<title>hb_buffer_get_script&#160;()</title>
<indexterm zone="hb-buffer-get-script" role="0.9.2"><primary>hb_buffer_get_script</primary></indexterm>
<programlisting language="C"><link linkend="hb-script-t"><returnvalue>hb_script_t</returnvalue></link>
hb_buffer_get_script (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Fetches the script of <parameter>buffer</parameter>
.</para>
<refsect3 id="hb-buffer-get-script.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-script.returns" role="returns">
<title>Returns</title>
<para>The <link linkend="hb-script-t"><type>hb_script_t</type></link> of the <parameter>buffer</parameter>
</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-set-language" role="function" condition="since:0.9.2">
<title>hb_buffer_set_language&#160;()</title>
<indexterm zone="hb-buffer-set-language" role="0.9.2"><primary>hb_buffer_set_language</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_language (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                        <parameter><link linkend="hb-language-t"><type>hb_language_t</type></link> language</parameter>);</programlisting>
<para>Sets the language of <parameter>buffer</parameter>
 to <parameter>language</parameter>
.</para>
<para>Languages are crucial for selecting which OpenType feature to apply to the
buffer which can result in applying language-specific behaviour. Languages
are orthogonal to the scripts, and though they are related, they are
different concepts and should not be confused with each other.</para>
<para>Use <link linkend="hb-language-from-string"><function>hb_language_from_string()</function></link> to convert from BCP 47 language tags to
<link linkend="hb-language-t"><type>hb_language_t</type></link>.</para>
<refsect3 id="hb-buffer-set-language.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>language</para></entry>
<entry role="parameter_description"><para>An hb_language_t to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-language" role="function" condition="since:0.9.2">
<title>hb_buffer_get_language&#160;()</title>
<indexterm zone="hb-buffer-get-language" role="0.9.2"><primary>hb_buffer_get_language</primary></indexterm>
<programlisting language="C"><link linkend="hb-language-t"><returnvalue>hb_language_t</returnvalue></link>
hb_buffer_get_language (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-set-language"><function>hb_buffer_set_language()</function></link>.</para>
<refsect3 id="hb-buffer-get-language.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-language.returns" role="returns">
<title>Returns</title>
<para>The <link linkend="hb-language-t"><type>hb_language_t</type></link> of the buffer. Must not be freed by the caller. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-set-flags" role="function" condition="since:0.9.7">
<title>hb_buffer_set_flags&#160;()</title>
<indexterm zone="hb-buffer-set-flags" role="0.9.7"><primary>hb_buffer_set_flags</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_flags (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                     <parameter><link linkend="hb-buffer-flags-t"><type>hb_buffer_flags_t</type></link> flags</parameter>);</programlisting>
<para>Sets <parameter>buffer</parameter>
 flags to <parameter>flags</parameter>
. See <link linkend="hb-buffer-flags-t"><type>hb_buffer_flags_t</type></link>.</para>
<refsect3 id="hb-buffer-set-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>The buffer flags to set</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-get-flags" role="function" condition="since:0.9.7">
<title>hb_buffer_get_flags&#160;()</title>
<indexterm zone="hb-buffer-get-flags" role="0.9.7"><primary>hb_buffer_get_flags</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-flags-t"><returnvalue>hb_buffer_flags_t</returnvalue></link>
hb_buffer_get_flags (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Fetches the <link linkend="hb-buffer-flags-t"><type>hb_buffer_flags_t</type></link> of <parameter>buffer</parameter>
.</para>
<refsect3 id="hb-buffer-get-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-flags.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
flags</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-set-cluster-level" role="function" condition="since:0.9.42">
<title>hb_buffer_set_cluster_level&#160;()</title>
<indexterm zone="hb-buffer-set-cluster-level" role="0.9.42"><primary>hb_buffer_set_cluster_level</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_cluster_level (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                             <parameter><link linkend="hb-buffer-cluster-level-t"><type>hb_buffer_cluster_level_t</type></link> cluster_level</parameter>);</programlisting>
<para>Sets the cluster level of a buffer. The <link linkend="hb-buffer-cluster-level-t"><type>hb_buffer_cluster_level_t</type></link>
dictates one aspect of how HarfBuzz will treat non-base characters 
during shaping.</para>
<refsect3 id="hb-buffer-set-cluster-level.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cluster_level</para></entry>
<entry role="parameter_description"><para>The cluster level to set on the buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.42">0.9.42</link></para></refsect2>
<refsect2 id="hb-buffer-get-cluster-level" role="function" condition="since:0.9.42">
<title>hb_buffer_get_cluster_level&#160;()</title>
<indexterm zone="hb-buffer-get-cluster-level" role="0.9.42"><primary>hb_buffer_get_cluster_level</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-cluster-level-t"><returnvalue>hb_buffer_cluster_level_t</returnvalue></link>
hb_buffer_get_cluster_level (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Fetches the cluster level of a buffer. The <link linkend="hb-buffer-cluster-level-t"><type>hb_buffer_cluster_level_t</type></link>
dictates one aspect of how HarfBuzz will treat non-base characters 
during shaping.</para>
<refsect3 id="hb-buffer-get-cluster-level.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-cluster-level.returns" role="returns">
<title>Returns</title>
<para> The cluster level of <parameter>buffer</parameter>
</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.42">0.9.42</link></para></refsect2>
<refsect2 id="hb-buffer-set-length" role="function" condition="since:0.9.2">
<title>hb_buffer_set_length&#160;()</title>
<indexterm zone="hb-buffer-set-length" role="0.9.2"><primary>hb_buffer_set_length</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_set_length (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                      <parameter>unsigned <link linkend="int"><type>int</type></link> length</parameter>);</programlisting>
<para>Similar to <link linkend="hb-buffer-pre-allocate"><function>hb_buffer_pre_allocate()</function></link>, but clears any new items added at the
end.</para>
<refsect3 id="hb-buffer-set-length.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>The new length of <parameter>buffer</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-set-length.returns" role="returns">
<title>Returns</title>
<para><literal>true</literal> if <parameter>buffer</parameter>
memory allocation succeeded, <literal>false</literal> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-length" role="function" condition="since:0.9.2">
<title>hb_buffer_get_length&#160;()</title>
<indexterm zone="hb-buffer-get-length" role="0.9.2"><primary>hb_buffer_get_length</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
hb_buffer_get_length (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Returns the number of items in the buffer.</para>
<refsect3 id="hb-buffer-get-length.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-length.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
length.
The value valid as long as buffer has not been modified.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-set-segment-properties" role="function" condition="since:0.9.7">
<title>hb_buffer_set_segment_properties&#160;()</title>
<indexterm zone="hb-buffer-set-segment-properties" role="0.9.7"><primary>hb_buffer_set_segment_properties</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_segment_properties (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                                  <parameter>const <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *props</parameter>);</programlisting>
<para>Sets the segment properties of the buffer, a shortcut for calling
<link linkend="hb-buffer-set-direction"><function>hb_buffer_set_direction()</function></link>, <link linkend="hb-buffer-set-script"><function>hb_buffer_set_script()</function></link> and
<link linkend="hb-buffer-set-language"><function>hb_buffer_set_language()</function></link> individually.</para>
<refsect3 id="hb-buffer-set-segment-properties.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>props</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> to use</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-get-segment-properties" role="function" condition="since:0.9.7">
<title>hb_buffer_get_segment_properties&#160;()</title>
<indexterm zone="hb-buffer-get-segment-properties" role="0.9.7"><primary>hb_buffer_get_segment_properties</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_get_segment_properties (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                                  <parameter><link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *props</parameter>);</programlisting>
<para>Sets <parameter>props</parameter>
 to the <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> of <parameter>buffer</parameter>
.</para>
<refsect3 id="hb-buffer-get-segment-properties.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>props</para></entry>
<entry role="parameter_description"><para>The output <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-guess-segment-properties" role="function" condition="since:0.9.7">
<title>hb_buffer_guess_segment_properties&#160;()</title>
<indexterm zone="hb-buffer-guess-segment-properties" role="0.9.7"><primary>hb_buffer_guess_segment_properties</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_guess_segment_properties (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Sets unset buffer segment properties based on buffer Unicode
contents.  If buffer is not empty, it must have content type
<link linkend="HB-BUFFER-CONTENT-TYPE-UNICODE:CAPS"><type>HB_BUFFER_CONTENT_TYPE_UNICODE</type></link>.</para>
<para>If buffer script is not set (ie. is <link linkend="HB-SCRIPT-INVALID:CAPS"><type>HB_SCRIPT_INVALID</type></link>), it
will be set to the Unicode script of the first character in
the buffer that has a script other than <link linkend="HB-SCRIPT-COMMON:CAPS"><type>HB_SCRIPT_COMMON</type></link>,
<link linkend="HB-SCRIPT-INHERITED:CAPS"><type>HB_SCRIPT_INHERITED</type></link>, and <link linkend="HB-SCRIPT-UNKNOWN:CAPS"><type>HB_SCRIPT_UNKNOWN</type></link>.</para>
<para>Next, if buffer direction is not set (ie. is <link linkend="HB-DIRECTION-INVALID:CAPS"><type>HB_DIRECTION_INVALID</type></link>),
it will be set to the natural horizontal direction of the
buffer script as returned by <link linkend="hb-script-get-horizontal-direction"><function>hb_script_get_horizontal_direction()</function></link>.
If <link linkend="hb-script-get-horizontal-direction"><function>hb_script_get_horizontal_direction()</function></link> returns <link linkend="HB-DIRECTION-INVALID:CAPS"><type>HB_DIRECTION_INVALID</type></link>,
then <link linkend="HB-DIRECTION-LTR:CAPS"><type>HB_DIRECTION_LTR</type></link> is used.</para>
<para>Finally, if buffer language is not set (ie. is <link linkend="HB-LANGUAGE-INVALID:CAPS"><type>HB_LANGUAGE_INVALID</type></link>),
it will be set to the process's default language as returned by
<link linkend="hb-language-get-default"><function>hb_language_get_default()</function></link>.  This may change in the future by
taking buffer script into consideration when choosing a language.
Note that <link linkend="hb-language-get-default"><function>hb_language_get_default()</function></link> is NOT threadsafe the first time
it is called.  See documentation for that function for details.</para>
<refsect3 id="hb-buffer-guess-segment-properties.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-set-unicode-funcs" role="function" condition="since:0.9.2">
<title>hb_buffer_set_unicode_funcs&#160;()</title>
<indexterm zone="hb-buffer-set-unicode-funcs" role="0.9.2"><primary>hb_buffer_set_unicode_funcs</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_unicode_funcs (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                             <parameter><link linkend="hb-unicode-funcs-t"><type>hb_unicode_funcs_t</type></link> *unicode_funcs</parameter>);</programlisting>
<para>Sets the Unicode-functions structure of a buffer to
<parameter>unicode_funcs</parameter>
.</para>
<refsect3 id="hb-buffer-set-unicode-funcs.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>unicode_funcs</para></entry>
<entry role="parameter_description"><para>The Unicode-functions structure</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-unicode-funcs" role="function" condition="since:0.9.2">
<title>hb_buffer_get_unicode_funcs&#160;()</title>
<indexterm zone="hb-buffer-get-unicode-funcs" role="0.9.2"><primary>hb_buffer_get_unicode_funcs</primary></indexterm>
<programlisting language="C"><link linkend="hb-unicode-funcs-t"><returnvalue>hb_unicode_funcs_t</returnvalue></link>&#160;*
hb_buffer_get_unicode_funcs (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Fetches the Unicode-functions structure of a buffer.</para>
<refsect3 id="hb-buffer-get-unicode-funcs.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-unicode-funcs.returns" role="returns">
<title>Returns</title>
<para> The Unicode-functions structure</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-get-glyph-infos" role="function" condition="since:0.9.2">
<title>hb_buffer_get_glyph_infos&#160;()</title>
<indexterm zone="hb-buffer-get-glyph-infos" role="0.9.2"><primary>hb_buffer_get_glyph_infos</primary></indexterm>
<programlisting language="C"><link linkend="hb-glyph-info-t"><returnvalue>hb_glyph_info_t</returnvalue></link>&#160;*
hb_buffer_get_glyph_infos (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                           <parameter>unsigned <link linkend="int"><type>int</type></link> *length</parameter>);</programlisting>
<para>Returns <parameter>buffer</parameter>
 glyph information array.  Returned pointer
is valid as long as <parameter>buffer</parameter>
 contents are not modified.</para>
<refsect3 id="hb-buffer-get-glyph-infos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>The output-array length. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-glyph-infos.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
glyph information array.
The value valid as long as buffer has not been modified. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>array</acronym> length=length]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-glyph-info-get-glyph-flags" role="function" condition="since:1.5.0">
<title>hb_glyph_info_get_glyph_flags&#160;()</title>
<indexterm zone="hb-glyph-info-get-glyph-flags" role="1.5.0"><primary>hb_glyph_info_get_glyph_flags</primary></indexterm>
<programlisting language="C"><link linkend="hb-glyph-flags-t"><returnvalue>hb_glyph_flags_t</returnvalue></link>
hb_glyph_info_get_glyph_flags (<parameter>const <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link> *info</parameter>);</programlisting>
<para>Returns glyph flags encoded within a <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link>.</para>
<refsect3 id="hb-glyph-info-get-glyph-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-glyph-info-get-glyph-flags.returns" role="returns">
<title>Returns</title>
<para>The <link linkend="hb-glyph-flags-t"><type>hb_glyph_flags_t</type></link> encoded within <parameter>info</parameter>
</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.5.0">1.5.0</link></para></refsect2>
<refsect2 id="hb-buffer-get-glyph-positions" role="function" condition="since:0.9.2">
<title>hb_buffer_get_glyph_positions&#160;()</title>
<indexterm zone="hb-buffer-get-glyph-positions" role="0.9.2"><primary>hb_buffer_get_glyph_positions</primary></indexterm>
<programlisting language="C"><link linkend="hb-glyph-position-t"><returnvalue>hb_glyph_position_t</returnvalue></link>&#160;*
hb_buffer_get_glyph_positions (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                               <parameter>unsigned <link linkend="int"><type>int</type></link> *length</parameter>);</programlisting>
<para>Returns <parameter>buffer</parameter>
 glyph position array.  Returned pointer
is valid as long as <parameter>buffer</parameter>
 contents are not modified.</para>
<para>If buffer did not have positions before, the positions will be
initialized to zeros, unless this function is called from
within a buffer message callback (see <link linkend="hb-buffer-set-message-func"><function>hb_buffer_set_message_func()</function></link>),
in which case <literal>NULL</literal> is returned.</para>
<refsect3 id="hb-buffer-get-glyph-positions.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>The output length. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-glyph-positions.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
glyph position array.
The value valid as long as buffer has not been modified. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>array</acronym> length=length]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-has-positions" role="function" condition="since:2.7.3">
<title>hb_buffer_has_positions&#160;()</title>
<indexterm zone="hb-buffer-has-positions" role="2.7.3"><primary>hb_buffer_has_positions</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_has_positions (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Returns whether <parameter>buffer</parameter>
 has glyph position data.
A buffer gains position data when <link linkend="hb-buffer-get-glyph-positions"><function>hb_buffer_get_glyph_positions()</function></link> is called on it,
and cleared of position data when <link linkend="hb-buffer-clear-contents"><function>hb_buffer_clear_contents()</function></link> is called.</para>
<refsect3 id="hb-buffer-has-positions.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-has-positions.returns" role="returns">
<title>Returns</title>
<para><literal>true</literal> if the <parameter>buffer</parameter>
has position array, <literal>false</literal> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.7.3">2.7.3</link></para></refsect2>
<refsect2 id="hb-buffer-set-invisible-glyph" role="function" condition="since:2.0.0">
<title>hb_buffer_set_invisible_glyph&#160;()</title>
<indexterm zone="hb-buffer-set-invisible-glyph" role="2.0.0"><primary>hb_buffer_set_invisible_glyph</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_invisible_glyph (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                               <parameter><link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> invisible</parameter>);</programlisting>
<para>Sets the <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> that replaces invisible characters in
the shaping result.  If set to zero (default), the glyph for the
U+0020 SPACE character is used.  Otherwise, this value is used
verbatim.</para>
<refsect3 id="hb-buffer-set-invisible-glyph.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>invisible</para></entry>
<entry role="parameter_description"><para>the invisible <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.0.0">2.0.0</link></para></refsect2>
<refsect2 id="hb-buffer-get-invisible-glyph" role="function" condition="since:2.0.0">
<title>hb_buffer_get_invisible_glyph&#160;()</title>
<indexterm zone="hb-buffer-get-invisible-glyph" role="2.0.0"><primary>hb_buffer_get_invisible_glyph</primary></indexterm>
<programlisting language="C"><link linkend="hb-codepoint-t"><returnvalue>hb_codepoint_t</returnvalue></link>
hb_buffer_get_invisible_glyph (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-set-invisible-glyph"><function>hb_buffer_set_invisible_glyph()</function></link>.</para>
<refsect3 id="hb-buffer-get-invisible-glyph.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-invisible-glyph.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
invisible <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.0.0">2.0.0</link></para></refsect2>
<refsect2 id="hb-buffer-set-not-found-glyph" role="function" condition="since:3.1.0">
<title>hb_buffer_set_not_found_glyph&#160;()</title>
<indexterm zone="hb-buffer-set-not-found-glyph" role="3.1.0"><primary>hb_buffer_set_not_found_glyph</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_not_found_glyph (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                               <parameter><link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> not_found</parameter>);</programlisting>
<para>Sets the <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> that replaces characters not found in
the font during shaping.</para>
<para>The not-found glyph defaults to zero, sometimes knows as the
".notdef" glyph.  This API allows for differentiating the two.</para>
<refsect3 id="hb-buffer-set-not-found-glyph.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>not_found</para></entry>
<entry role="parameter_description"><para>the not-found <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-3.1.0">3.1.0</link></para></refsect2>
<refsect2 id="hb-buffer-get-not-found-glyph" role="function" condition="since:3.1.0">
<title>hb_buffer_get_not_found_glyph&#160;()</title>
<indexterm zone="hb-buffer-get-not-found-glyph" role="3.1.0"><primary>hb_buffer_get_not_found_glyph</primary></indexterm>
<programlisting language="C"><link linkend="hb-codepoint-t"><returnvalue>hb_codepoint_t</returnvalue></link>
hb_buffer_get_not_found_glyph (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>See <link linkend="hb-buffer-set-not-found-glyph"><function>hb_buffer_set_not_found_glyph()</function></link>.</para>
<refsect3 id="hb-buffer-get-not-found-glyph.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-not-found-glyph.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
not-found <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-3.1.0">3.1.0</link></para></refsect2>
<refsect2 id="hb-buffer-set-replacement-codepoint" role="function" condition="since:0.9.31">
<title>hb_buffer_set_replacement_codepoint&#160;()</title>
<indexterm zone="hb-buffer-set-replacement-codepoint" role="0.9.31"><primary>hb_buffer_set_replacement_codepoint</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_replacement_codepoint (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                                     <parameter><link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> replacement</parameter>);</programlisting>
<para>Sets the <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> that replaces invalid entries for a given encoding
when adding text to <parameter>buffer</parameter>
.</para>
<para>Default is <link linkend="HB-BUFFER-REPLACEMENT-CODEPOINT-DEFAULT:CAPS"><type>HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT</type></link>.</para>
<refsect3 id="hb-buffer-set-replacement-codepoint.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>replacement</para></entry>
<entry role="parameter_description"><para>the replacement <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.31">0.9.31</link></para></refsect2>
<refsect2 id="hb-buffer-get-replacement-codepoint" role="function" condition="since:0.9.31">
<title>hb_buffer_get_replacement_codepoint&#160;()</title>
<indexterm zone="hb-buffer-get-replacement-codepoint" role="0.9.31"><primary>hb_buffer_get_replacement_codepoint</primary></indexterm>
<programlisting language="C"><link linkend="hb-codepoint-t"><returnvalue>hb_codepoint_t</returnvalue></link>
hb_buffer_get_replacement_codepoint (<parameter>const <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Fetches the <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> that replaces invalid entries for a given encoding
when adding text to <parameter>buffer</parameter>
.</para>
<refsect3 id="hb-buffer-get-replacement-codepoint.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-get-replacement-codepoint.returns" role="returns">
<title>Returns</title>
<para>The <parameter>buffer</parameter>
replacement <link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.31">0.9.31</link></para></refsect2>
<refsect2 id="hb-buffer-normalize-glyphs" role="function" condition="since:0.9.2">
<title>hb_buffer_normalize_glyphs&#160;()</title>
<indexterm zone="hb-buffer-normalize-glyphs" role="0.9.2"><primary>hb_buffer_normalize_glyphs</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_normalize_glyphs (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Reorders a glyph buffer to have canonical in-cluster glyph order / position.
The resulting clusters should behave identical to pre-reordering clusters.</para>
<note>This has nothing to do with Unicode normalization.</note>
<refsect3 id="hb-buffer-normalize-glyphs.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-reverse" role="function" condition="since:0.9.2">
<title>hb_buffer_reverse&#160;()</title>
<indexterm zone="hb-buffer-reverse" role="0.9.2"><primary>hb_buffer_reverse</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_reverse (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Reverses buffer contents.</para>
<refsect3 id="hb-buffer-reverse.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-reverse-range" role="function" condition="since:0.9.41">
<title>hb_buffer_reverse_range&#160;()</title>
<indexterm zone="hb-buffer-reverse-range" role="0.9.41"><primary>hb_buffer_reverse_range</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_reverse_range (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                         <parameter>unsigned <link linkend="int"><type>int</type></link> start</parameter>,
                         <parameter>unsigned <link linkend="int"><type>int</type></link> end</parameter>);</programlisting>
<para>Reverses buffer contents between <parameter>start</parameter>
 and <parameter>end</parameter>
.</para>
<refsect3 id="hb-buffer-reverse-range.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>start index</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end</para></entry>
<entry role="parameter_description"><para>end index</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.41">0.9.41</link></para></refsect2>
<refsect2 id="hb-buffer-reverse-clusters" role="function" condition="since:0.9.2">
<title>hb_buffer_reverse_clusters&#160;()</title>
<indexterm zone="hb-buffer-reverse-clusters" role="0.9.2"><primary>hb_buffer_reverse_clusters</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_reverse_clusters (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>);</programlisting>
<para>Reverses buffer clusters.  That is, the buffer contents are
reversed, then each cluster (consecutive items having the
same cluster number) are reversed again.</para>
<refsect3 id="hb-buffer-reverse-clusters.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-serialize" role="function" condition="since:2.7.3">
<title>hb_buffer_serialize&#160;()</title>
<indexterm zone="hb-buffer-serialize" role="2.7.3"><primary>hb_buffer_serialize</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
hb_buffer_serialize (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                     <parameter>unsigned <link linkend="int"><type>int</type></link> start</parameter>,
                     <parameter>unsigned <link linkend="int"><type>int</type></link> end</parameter>,
                     <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                     <parameter>unsigned <link linkend="int"><type>int</type></link> buf_size</parameter>,
                     <parameter>unsigned <link linkend="int"><type>int</type></link> *buf_consumed</parameter>,
                     <parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
                     <parameter><link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> format</parameter>,
                     <parameter><link linkend="hb-buffer-serialize-flags-t"><type>hb_buffer_serialize_flags_t</type></link> flags</parameter>);</programlisting>
<para>Serializes <parameter>buffer</parameter>
 into a textual representation of its content, whether
Unicode codepoints or glyph identifiers and positioning information. This is
useful for showing the contents of the buffer, for example during debugging.
See the documentation of <link linkend="hb-buffer-serialize-unicode"><function>hb_buffer_serialize_unicode()</function></link> and
<link linkend="hb-buffer-serialize-glyphs"><function>hb_buffer_serialize_glyphs()</function></link> for a description of the output format.</para>
<refsect3 id="hb-buffer-serialize.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>the first item in <parameter>buffer</parameter>
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end</para></entry>
<entry role="parameter_description"><para>the last item in <parameter>buffer</parameter>
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>output string to
write serialized buffer into. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>array</acronym> length=buf_size][<acronym>element-type</acronym> uint8_t]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buf_size</para></entry>
<entry role="parameter_description"><para>the size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf_consumed</para></entry>
<entry role="parameter_description"><para>if not <literal>NULL</literal>, will be set to the number of bytes written into <parameter>buf</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-font-t"><type>hb_font_t</type></link> used to shape this buffer, needed to
read glyph names and extents. If <literal>NULL</literal>, an empty font will be used. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> to use for formatting the output.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-flags-t"><type>hb_buffer_serialize_flags_t</type></link> that control what glyph properties
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-serialize.returns" role="returns">
<title>Returns</title>
<para>The number of serialized items.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.7.3">2.7.3</link></para></refsect2>
<refsect2 id="hb-buffer-serialize-glyphs" role="function" condition="since:0.9.7">
<title>hb_buffer_serialize_glyphs&#160;()</title>
<indexterm zone="hb-buffer-serialize-glyphs" role="0.9.7"><primary>hb_buffer_serialize_glyphs</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
hb_buffer_serialize_glyphs (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                            <parameter>unsigned <link linkend="int"><type>int</type></link> start</parameter>,
                            <parameter>unsigned <link linkend="int"><type>int</type></link> end</parameter>,
                            <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                            <parameter>unsigned <link linkend="int"><type>int</type></link> buf_size</parameter>,
                            <parameter>unsigned <link linkend="int"><type>int</type></link> *buf_consumed</parameter>,
                            <parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
                            <parameter><link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> format</parameter>,
                            <parameter><link linkend="hb-buffer-serialize-flags-t"><type>hb_buffer_serialize_flags_t</type></link> flags</parameter>);</programlisting>
<para>Serializes <parameter>buffer</parameter>
 into a textual representation of its glyph content,
useful for showing the contents of the buffer, for example during debugging.
There are currently two supported serialization formats:</para>
<refsect3><title>text</title><para>A human-readable, plain text format.
The serialized glyphs will look something like:</para>
<para><literal>
[uni0651=0@518,0+0|uni0628=0+1897]
</literal></para>
<itemizedlist>
<listitem><para>The serialized glyphs are delimited with <literal>[</literal> and <literal>]</literal>.</para></listitem>
<listitem><para>Glyphs are separated with <literal>|</literal></para></listitem>
<listitem><para>Each glyph starts with glyph name, or glyph index if
<link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-GLYPH-NAMES:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES</type></link> flag is set. Then,</para>
<itemizedlist>
<listitem><para>If <link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-CLUSTERS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS</type></link> is not set, <literal>=</literal> then <link linkend="hb-glyph-info-t.cluster"><type>hb_glyph_info_t.cluster</type></link>.</para></listitem>
<listitem><para>If <link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-POSITIONS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS</type></link> is not set, the <link linkend="hb-glyph-position-t"><type>hb_glyph_position_t</type></link> in the format:</para>
<itemizedlist>
<listitem><para>If both <link linkend="hb-glyph-position-t.x-offset"><type>hb_glyph_position_t.x_offset</type></link> and <link linkend="hb-glyph-position-t.y-offset"><type>hb_glyph_position_t.y_offset</type></link> are not 0, <literal>@x_offset,y_offset</literal>. Then,</para></listitem>
<listitem><para><literal>+x_advance</literal>, then <literal>,y_advance</literal> if <link linkend="hb-glyph-position-t.y-advance"><type>hb_glyph_position_t.y_advance</type></link> is not 0. Then,</para></listitem>
</itemizedlist>
</listitem>
<listitem>
<para>If <link linkend="HB-BUFFER-SERIALIZE-FLAG-GLYPH-EXTENTS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS</type></link> is set, the <link linkend="hb-glyph-extents-t"><type>hb_glyph_extents_t</type></link> in the format <literal>&lt;x_bearing,y_bearing,width,height&gt;</literal></para>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</refsect3>
<refsect3><title>json</title><para>A machine-readable, structured format.
The serialized glyphs will look something like:</para>
<para><literal>
[{"g":"uni0651","cl":0,"dx":518,"dy":0,"ax":0,"ay":0},
{"g":"uni0628","cl":0,"dx":0,"dy":0,"ax":1897,"ay":0}]
</literal></para>
<para>Each glyph is a JSON object, with the following properties:</para>
<itemizedlist>
<listitem><para><literal>g</literal>: the glyph name or glyph index if
<link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-GLYPH-NAMES:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES</type></link> flag is set.</para></listitem>
<listitem><para><literal>cl</literal>: <link linkend="hb-glyph-info-t.cluster"><type>hb_glyph_info_t.cluster</type></link> if
<link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-CLUSTERS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS</type></link> is not set.</para></listitem>
<listitem><para><literal>dx</literal>,<literal>dy</literal>,<literal>ax</literal>,<literal>ay</literal>: <link linkend="hb-glyph-position-t.x-offset"><type>hb_glyph_position_t.x_offset</type></link>, <link linkend="hb-glyph-position-t.y-offset"><type>hb_glyph_position_t.y_offset</type></link>,
<link linkend="hb-glyph-position-t.x-advance"><type>hb_glyph_position_t.x_advance</type></link> and <link linkend="hb-glyph-position-t.y-advance"><type>hb_glyph_position_t.y_advance</type></link>
respectively, if <link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-POSITIONS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS</type></link> is not set.</para></listitem>
<listitem><para><literal>xb</literal>,<literal>yb</literal>,<literal>w</literal>,<literal>h</literal>: <link linkend="hb-glyph-extents-t.x-bearing"><type>hb_glyph_extents_t.x_bearing</type></link>, <link linkend="hb-glyph-extents-t.y-bearing"><type>hb_glyph_extents_t.y_bearing</type></link>,
<link linkend="hb-glyph-extents-t.width"><type>hb_glyph_extents_t.width</type></link> and <link linkend="hb-glyph-extents-t.height"><type>hb_glyph_extents_t.height</type></link> respectively if
<link linkend="HB-BUFFER-SERIALIZE-FLAG-GLYPH-EXTENTS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS</type></link> is set.</para></listitem>
</itemizedlist>
</refsect3>
<refsect3 id="hb-buffer-serialize-glyphs.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>the first item in <parameter>buffer</parameter>
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end</para></entry>
<entry role="parameter_description"><para>the last item in <parameter>buffer</parameter>
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>output string to
write serialized buffer into. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>array</acronym> length=buf_size][<acronym>element-type</acronym> uint8_t]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buf_size</para></entry>
<entry role="parameter_description"><para>the size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf_consumed</para></entry>
<entry role="parameter_description"><para>if not <literal>NULL</literal>, will be set to the number of bytes written into <parameter>buf</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-font-t"><type>hb_font_t</type></link> used to shape this buffer, needed to
read glyph names and extents. If <literal>NULL</literal>, an empty font will be used. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> to use for formatting the output.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-flags-t"><type>hb_buffer_serialize_flags_t</type></link> that control what glyph properties
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-serialize-glyphs.returns" role="returns">
<title>Returns</title>
<para>The number of serialized items.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-deserialize-glyphs" role="function" condition="since:0.9.7">
<title>hb_buffer_deserialize_glyphs&#160;()</title>
<indexterm zone="hb-buffer-deserialize-glyphs" role="0.9.7"><primary>hb_buffer_deserialize_glyphs</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_deserialize_glyphs (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> *buf</parameter>,
                              <parameter><link linkend="int"><type>int</type></link> buf_len</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> **end_ptr</parameter>,
                              <parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
                              <parameter><link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> format</parameter>);</programlisting>
<para>Deserializes glyphs <parameter>buffer</parameter>
 from textual representation in the format
produced by <link linkend="hb-buffer-serialize-glyphs"><function>hb_buffer_serialize_glyphs()</function></link>.</para>
<refsect3 id="hb-buffer-deserialize-glyphs.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>string to deserialize. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=buf_len]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buf_len</para></entry>
<entry role="parameter_description"><para>the size of <parameter>buf</parameter>
, or -1 if it is <literal>NULL</literal>-terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end_ptr</para></entry>
<entry role="parameter_description"><para>output pointer to the character after last
consumed one. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>font for getting glyph IDs. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> of the input <parameter>buf</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-deserialize-glyphs.returns" role="returns">
<title>Returns</title>
<para> <literal>true</literal> if parse was successful, <literal>false</literal> if an error
occurred.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-serialize-unicode" role="function" condition="since:2.7.3">
<title>hb_buffer_serialize_unicode&#160;()</title>
<indexterm zone="hb-buffer-serialize-unicode" role="2.7.3"><primary>hb_buffer_serialize_unicode</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
hb_buffer_serialize_unicode (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                             <parameter>unsigned <link linkend="int"><type>int</type></link> start</parameter>,
                             <parameter>unsigned <link linkend="int"><type>int</type></link> end</parameter>,
                             <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                             <parameter>unsigned <link linkend="int"><type>int</type></link> buf_size</parameter>,
                             <parameter>unsigned <link linkend="int"><type>int</type></link> *buf_consumed</parameter>,
                             <parameter><link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> format</parameter>,
                             <parameter><link linkend="hb-buffer-serialize-flags-t"><type>hb_buffer_serialize_flags_t</type></link> flags</parameter>);</programlisting>
<para>Serializes <parameter>buffer</parameter>
 into a textual representation of its content,
when the buffer contains Unicode codepoints (i.e., before shaping). This is
useful for showing the contents of the buffer, for example during debugging.
There are currently two supported serialization formats:</para>
<refsect3><title>text</title><para>A human-readable, plain text format.
The serialized codepoints will look something like:</para>
<para><literal>
 &lt;U+0651=0|U+0628=1&gt;
</literal></para>
<itemizedlist>
<listitem><para>Glyphs are separated with <literal>|</literal></para></listitem>
<listitem><para>Unicode codepoints are expressed as zero-padded four (or more)
digit hexadecimal numbers preceded by <literal>U+</literal></para></listitem>
<listitem>
<para>If <link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-CLUSTERS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS</type></link> is not set, the cluster
will be indicated with a <literal>=</literal> then <link linkend="hb-glyph-info-t.cluster"><type>hb_glyph_info_t.cluster</type></link>.</para>
</listitem>
</itemizedlist>
</refsect3>
<refsect3><title>json</title><para>A machine-readable, structured format.
The serialized codepoints will be a list of objects with the following
properties:</para>
<itemizedlist>
<listitem><para><literal>u</literal>: the Unicode codepoint as a decimal integer</para></listitem>
<listitem>
<para><literal>cl</literal>: <link linkend="hb-glyph-info-t.cluster"><type>hb_glyph_info_t.cluster</type></link> if
<link linkend="HB-BUFFER-SERIALIZE-FLAG-NO-CLUSTERS:CAPS"><type>HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS</type></link> is not set.</para>
</listitem>
</itemizedlist>
<para>For example:</para>
<para><literal>
[{u:1617,cl:0},{u:1576,cl:1}]
</literal></para>
</refsect3>
<refsect3 id="hb-buffer-serialize-unicode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>start</para></entry>
<entry role="parameter_description"><para>the first item in <parameter>buffer</parameter>
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end</para></entry>
<entry role="parameter_description"><para>the last item in <parameter>buffer</parameter>
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>output string to
write serialized buffer into. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>array</acronym> length=buf_size][<acronym>element-type</acronym> uint8_t]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buf_size</para></entry>
<entry role="parameter_description"><para>the size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf_consumed</para></entry>
<entry role="parameter_description"><para>if not <literal>NULL</literal>, will be set to the number of bytes written into <parameter>buf</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> to use for formatting the output.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-flags-t"><type>hb_buffer_serialize_flags_t</type></link> that control what glyph properties
to serialize.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-serialize-unicode.returns" role="returns">
<title>Returns</title>
<para>The number of serialized items.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.7.3">2.7.3</link></para></refsect2>
<refsect2 id="hb-buffer-deserialize-unicode" role="function" condition="since:2.7.3">
<title>hb_buffer_deserialize_unicode&#160;()</title>
<indexterm zone="hb-buffer-deserialize-unicode" role="2.7.3"><primary>hb_buffer_deserialize_unicode</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_buffer_deserialize_unicode (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                               <parameter>const <link linkend="char"><type>char</type></link> *buf</parameter>,
                               <parameter><link linkend="int"><type>int</type></link> buf_len</parameter>,
                               <parameter>const <link linkend="char"><type>char</type></link> **end_ptr</parameter>,
                               <parameter><link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> format</parameter>);</programlisting>
<para>Deserializes Unicode <parameter>buffer</parameter>
 from textual representation in the format
produced by <link linkend="hb-buffer-serialize-unicode"><function>hb_buffer_serialize_unicode()</function></link>.</para>
<refsect3 id="hb-buffer-deserialize-unicode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>string to deserialize. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=buf_len]</emphasis></entry></row>
<row><entry role="parameter_name"><para>buf_len</para></entry>
<entry role="parameter_description"><para>the size of <parameter>buf</parameter>
, or -1 if it is <literal>NULL</literal>-terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>end_ptr</para></entry>
<entry role="parameter_description"><para>output pointer to the character after last
consumed one. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> of the input <parameter>buf</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-deserialize-unicode.returns" role="returns">
<title>Returns</title>
<para> <literal>true</literal> if parse was successful, <literal>false</literal> if an error
occurred.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.7.3">2.7.3</link></para></refsect2>
<refsect2 id="hb-buffer-serialize-format-from-string" role="function" condition="since:0.9.7">
<title>hb_buffer_serialize_format_from_string&#160;()</title>
<indexterm zone="hb-buffer-serialize-format-from-string" role="0.9.7"><primary>hb_buffer_serialize_format_from_string</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-serialize-format-t"><returnvalue>hb_buffer_serialize_format_t</returnvalue></link>
hb_buffer_serialize_format_from_string
                               (<parameter>const <link linkend="char"><type>char</type></link> *str</parameter>,
                                <parameter><link linkend="int"><type>int</type></link> len</parameter>);</programlisting>
<para>Parses a string into an <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link>. Does not check if
<parameter>str</parameter>
 is a valid buffer serialization format, use
<link linkend="hb-buffer-serialize-list-formats"><function>hb_buffer_serialize_list_formats()</function></link> to get the list of supported formats.</para>
<refsect3 id="hb-buffer-serialize-format-from-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>a string to parse. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> length=len][<acronym>element-type</acronym> uint8_t]</emphasis></entry></row>
<row><entry role="parameter_name"><para>len</para></entry>
<entry role="parameter_description"><para>length of <parameter>str</parameter>
, or -1 if string is <literal>NULL</literal> terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-serialize-format-from-string.returns" role="returns">
<title>Returns</title>
<para>The parsed <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-serialize-format-to-string" role="function" condition="since:0.9.7">
<title>hb_buffer_serialize_format_to_string&#160;()</title>
<indexterm zone="hb-buffer-serialize-format-to-string" role="0.9.7"><primary>hb_buffer_serialize_format_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
hb_buffer_serialize_format_to_string (<parameter><link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> format</parameter>);</programlisting>
<para>Converts <parameter>format</parameter>
 to the string corresponding it, or <literal>NULL</literal> if it is not a valid
<link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link>.</para>
<refsect3 id="hb-buffer-serialize-format-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>an <link linkend="hb-buffer-serialize-format-t"><type>hb_buffer_serialize_format_t</type></link> to convert.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-serialize-format-to-string.returns" role="returns">
<title>Returns</title>
<para>A <literal>NULL</literal> terminated string corresponding to <parameter>format</parameter>
. Should not be freed. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-buffer-serialize-list-formats" role="function" condition="since:0.9.7">
<title>hb_buffer_serialize_list_formats&#160;()</title>
<indexterm zone="hb-buffer-serialize-list-formats" role="0.9.7"><primary>hb_buffer_serialize_list_formats</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
hb_buffer_serialize_list_formats (<parameter><type>void</type></parameter>);</programlisting>
<para>Returns a list of supported buffer serialization formats.</para>
<refsect3 id="hb-buffer-serialize-list-formats.returns" role="returns">
<title>Returns</title>
<para>A string array of buffer serialization formats. Should not be freed. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-segment-properties-equal" role="function" condition="since:0.9.7">
<title>hb_segment_properties_equal&#160;()</title>
<indexterm zone="hb-segment-properties-equal" role="0.9.7"><primary>hb_segment_properties_equal</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
hb_segment_properties_equal (<parameter>const <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *a</parameter>,
                             <parameter>const <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *b</parameter>);</programlisting>
<para>Checks the equality of two <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link>'s.</para>
<refsect3 id="hb-segment-properties-equal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>a</para></entry>
<entry role="parameter_description"><para>first <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> to compare.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>b</para></entry>
<entry role="parameter_description"><para>second <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> to compare.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-segment-properties-equal.returns" role="returns">
<title>Returns</title>
<para><literal>true</literal> if all properties of <parameter>a</parameter>
equal those of <parameter>b</parameter>
, <literal>false</literal> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-segment-properties-hash" role="function" condition="since:0.9.7">
<title>hb_segment_properties_hash&#160;()</title>
<indexterm zone="hb-segment-properties-hash" role="0.9.7"><primary>hb_segment_properties_hash</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
hb_segment_properties_hash (<parameter>const <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *p</parameter>);</programlisting>
<para>Creates a hash representing <parameter>p</parameter>
.</para>
<refsect3 id="hb-segment-properties-hash.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para><link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> to hash.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-segment-properties-hash.returns" role="returns">
<title>Returns</title>
<para>A hash of <parameter>p</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.7">0.9.7</link></para></refsect2>
<refsect2 id="hb-segment-properties-overlay" role="function" condition="since:3.3.0">
<title>hb_segment_properties_overlay&#160;()</title>
<indexterm zone="hb-segment-properties-overlay" role="3.3.0"><primary>hb_segment_properties_overlay</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_segment_properties_overlay (<parameter><link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *p</parameter>,
                               <parameter>const <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> *src</parameter>);</programlisting>
<para>Fills in missing fields of <parameter>p</parameter>
 from <parameter>src</parameter>
 in a considered manner.</para>
<para>First, if <parameter>p</parameter>
 does not have direction set, direction is copied from <parameter>src</parameter>
.</para>
<para>Next, if <parameter>p</parameter>
 and <parameter>src</parameter>
 have the same direction (which can be unset), if <parameter>p</parameter>

does not have script set, script is copied from <parameter>src</parameter>
.</para>
<para>Finally, if <parameter>p</parameter>
 and <parameter>src</parameter>
 have the same direction and script (which either
can be unset), if <parameter>p</parameter>
 does not have language set, language is copied from
<parameter>src</parameter>
.</para>
<refsect3 id="hb-segment-properties-overlay.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>p</para></entry>
<entry role="parameter_description"><para><link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> to fill in.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para><link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> to fill in from.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-3.3.0">3.3.0</link></para></refsect2>
<refsect2 id="hb-buffer-diff" role="function" condition="since:1.5.0">
<title>hb_buffer_diff&#160;()</title>
<indexterm zone="hb-buffer-diff" role="1.5.0"><primary>hb_buffer_diff</primary></indexterm>
<programlisting language="C"><link linkend="hb-buffer-diff-flags-t"><returnvalue>hb_buffer_diff_flags_t</returnvalue></link>
hb_buffer_diff (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                <parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *reference</parameter>,
                <parameter><link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link> dottedcircle_glyph</parameter>,
                <parameter>unsigned <link linkend="int"><type>int</type></link> position_fuzz</parameter>);</programlisting>
<para>If dottedcircle_glyph is (hb_codepoint_t) -1 then <link linkend="HB-BUFFER-DIFF-FLAG-DOTTED-CIRCLE-PRESENT:CAPS"><type>HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT</type></link>
and <link linkend="HB-BUFFER-DIFF-FLAG-NOTDEF-PRESENT:CAPS"><type>HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT</type></link> are never returned.  This should be used by most
callers if just comparing two buffers is needed.</para>
<refsect3 id="hb-buffer-diff.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>a buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>reference</para></entry>
<entry role="parameter_description"><para>other buffer to compare to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dottedcircle_glyph</para></entry>
<entry role="parameter_description"><para>glyph id of U+25CC DOTTED CIRCLE, or (hb_codepont_t) -1.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>position_fuzz</para></entry>
<entry role="parameter_description"><para>allowed absolute difference in position values.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.5.0">1.5.0</link></para></refsect2>
<refsect2 id="hb-buffer-message-func-t" role="function" condition="since:1.1.3">
<title>hb_buffer_message_func_t&#160;()</title>
<indexterm zone="hb-buffer-message-func-t" role="1.1.3"><primary>hb_buffer_message_func_t</primary></indexterm>
<programlisting language="C"><link linkend="hb-bool-t"><returnvalue>hb_bool_t</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*hb_buffer_message_func_t<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                             <parameter><link linkend="hb-font-t"><type>hb_font_t</type></link> *font</parameter>,
                             <parameter>const <link linkend="char"><type>char</type></link> *message</parameter>,
                             <parameter><link linkend="void"><type>void</type></link> *user_data</parameter>);</programlisting>
<para>A callback method for <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>. The method gets called with the
<link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> it was set on, the <link linkend="hb-font-t"><type>hb_font_t</type></link> the buffer is shaped with and a
message describing what step of the shaping process will be performed.
Returning <literal>false</literal> from this method will skip this shaping step and move to
the next one.</para>
<refsect3 id="hb-buffer-message-func-t.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> to work upon</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>font</para></entry>
<entry role="parameter_description"><para>The <link linkend="hb-font-t"><type>hb_font_t</type></link> the <parameter>buffer</parameter>
is shaped with</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para><literal>NULL</literal>-terminated message passed to the function</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>User data pointer passed by the caller</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="hb-buffer-message-func-t.returns" role="returns">
<title>Returns</title>
<para> <literal>true</literal> to perform the shaping step, <literal>false</literal> to skip it.</para>
</refsect3><para role="since">Since: <link linkend="api-index-1.1.3">1.1.3</link></para></refsect2>
<refsect2 id="hb-buffer-set-message-func" role="function" condition="since:1.1.3">
<title>hb_buffer_set_message_func&#160;()</title>
<indexterm zone="hb-buffer-set-message-func" role="1.1.3"><primary>hb_buffer_set_message_func</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
hb_buffer_set_message_func (<parameter><link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> *buffer</parameter>,
                            <parameter><link linkend="hb-buffer-message-func-t"><type>hb_buffer_message_func_t</type></link> func</parameter>,
                            <parameter><link linkend="void"><type>void</type></link> *user_data</parameter>,
                            <parameter><link linkend="hb-destroy-func-t"><type>hb_destroy_func_t</type></link> destroy</parameter>);</programlisting>
<para>Sets the implementation function for <link linkend="hb-buffer-message-func-t"><type>hb_buffer_message_func_t</type></link>.</para>
<refsect3 id="hb-buffer-set-message-func.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>An <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>func</para></entry>
<entry role="parameter_description"><para>Callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym> user_data][<acronym>destroy</acronym> destroy][<acronym>scope notified</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>Data to pass to <parameter>func</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>destroy</para></entry>
<entry role="parameter_description"><para>The function to call when <parameter>user_data</parameter>
is not needed anymore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.1.3">1.1.3</link></para></refsect2>

</refsect1>
<refsect1 id="harfbuzz-hb-buffer.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="HB-SEGMENT-PROPERTIES-DEFAULT:CAPS" role="macro">
<title>HB_SEGMENT_PROPERTIES_DEFAULT</title>
<indexterm zone="HB-SEGMENT-PROPERTIES-DEFAULT:CAPS"><primary>HB_SEGMENT_PROPERTIES_DEFAULT</primary></indexterm>
<programlisting language="C">#define             HB_SEGMENT_PROPERTIES_DEFAULT</programlisting>
<para>The default <link linkend="hb-segment-properties-t"><type>hb_segment_properties_t</type></link> of of freshly created <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>.</para>
</refsect2>
<refsect2 id="HB-BUFFER-REPLACEMENT-CODEPOINT-DEFAULT:CAPS" role="macro" condition="since:0.9.31">
<title>HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT</title>
<indexterm zone="HB-BUFFER-REPLACEMENT-CODEPOINT-DEFAULT:CAPS" role="0.9.31"><primary>HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT</primary></indexterm>
<programlisting language="C">#define HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT 0xFFFDu
</programlisting>
<para>The default code point for replacing invalid characters in a given encoding.
Set to U+FFFD REPLACEMENT CHARACTER.</para>
<para role="since">Since: <link linkend="api-index-0.9.31">0.9.31</link></para></refsect2>
<refsect2 id="hb-buffer-t" role="typedef">
<title>hb_buffer_t</title>
<indexterm zone="hb-buffer-t"><primary>hb_buffer_t</primary></indexterm>
<programlisting language="C">typedef struct hb_buffer_t hb_buffer_t;
</programlisting>
<para>The main structure holding the input text and its properties before shaping,
and output glyphs and their information after shaping.</para>
</refsect2>
<refsect2 id="hb-glyph-info-t" role="struct">
<title>hb_glyph_info_t</title>
<indexterm zone="hb-glyph-info-t"><primary>hb_glyph_info_t</primary></indexterm>
<programlisting language="C">typedef struct {
  hb_codepoint_t codepoint;
  uint32_t       cluster;
} hb_glyph_info_t;
</programlisting>
<para>The <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link> is the structure that holds information about the
glyphs and their relation to input text.</para>
<refsect3 id="hb-glyph-info-t.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-codepoint-t"><type>hb_codepoint_t</type></link>&#160;<structfield id="hb-glyph-info-t.codepoint">codepoint</structfield>;</para></entry>
<entry role="struct_member_description"><para>either a Unicode code point (before shaping) or a glyph index
(after shaping).</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="uint32-t"><type>uint32_t</type></link>&#160;<structfield id="hb-glyph-info-t.cluster">cluster</structfield>;</para></entry>
<entry role="struct_member_description"><para>the index of the character in the original text that corresponds
to this <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link>, or whatever the client passes to
<link linkend="hb-buffer-add"><function>hb_buffer_add()</function></link>. More than one <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link> can have the same
<parameter>cluster</parameter>
value, if they resulted from the same character (e.g. one
to many glyph substitution), and when more than one character gets
merged in the same glyph (e.g. many to one glyph substitution) the
<link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link> will have the smallest cluster value of them.
By default some characters are merged into the same cluster
(e.g. combining marks have the same cluster as their bases)
even if they are separate glyphs, <link linkend="hb-buffer-set-cluster-level"><function>hb_buffer_set_cluster_level()</function></link>
allow selecting more fine-grained cluster handling.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="hb-glyph-flags-t" role="enum" condition="since:1.5.0">
<title>enum hb_glyph_flags_t</title>
<indexterm zone="hb-glyph-flags-t" role="1.5.0"><primary>hb_glyph_flags_t</primary></indexterm>
<para>Flags for <link linkend="hb-glyph-info-t"><type>hb_glyph_info_t</type></link>.</para>
<refsect3 id="hb-glyph-flags-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-GLYPH-FLAG-UNSAFE-TO-BREAK:CAPS">HB_GLYPH_FLAG_UNSAFE_TO_BREAK</para></entry>
<entry role="enum_member_description"><para>Indicates that if input text is broken at the
				   beginning of the cluster this glyph is part of,
				   then both sides need to be re-shaped, as the
				   result might be different.
				   On the flip side, it means that when this
				   flag is not present, then it is safe to break
				   the glyph-run at the beginning of this
				   cluster, and the two sides will represent the
				   exact same result one would get if breaking
				   input text at the beginning of this cluster
				   and shaping the two sides separately.
				   This can be used to optimize paragraph
				   layout, by avoiding re-shaping of each line
				   after line-breaking.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-GLYPH-FLAG-UNSAFE-TO-CONCAT:CAPS">HB_GLYPH_FLAG_UNSAFE_TO_CONCAT</para></entry>
<entry role="enum_member_description"><para>Indicates that if input text is changed on one
				   side of the beginning of the cluster this glyph
				   is part of, then the shaping results for the
				   other side might change.
				   Note that the absence of this flag will NOT by
				   itself mean that it IS safe to concat text.
				   Only two pieces of text both of which clear of
				   this flag can be concatenated safely.
				   This can be used to optimize paragraph
				   layout, by avoiding re-shaping of each line
				   after line-breaking, by limiting the
				   reshaping to a small piece around the
				   breaking positin only, even if the breaking
				   position carries the
				   <link linkend="HB-GLYPH-FLAG-UNSAFE-TO-BREAK:CAPS"><type>HB_GLYPH_FLAG_UNSAFE_TO_BREAK</type></link> or when
				   hyphenation or other text transformation
				   happens at line-break position, in the following
				   way:
				   1. Iterate back from the line-break position
				   until the first cluster start position that is
				   NOT unsafe-to-concat, 2. shape the segment from
				   there till the end of line, 3. check whether the
				   resulting glyph-run also is clear of the
				   unsafe-to-concat at its start-of-text position;
				   if it is, just splice it into place and the line
				   is shaped; If not, move on to a position further
				   back that is clear of unsafe-to-concat and retry
				   from there, and repeat.
				   At the start of next line a similar algorithm can
				   be implemented. That is: 1. Iterate forward from
				   the line-break position until the first cluster
				   start position that is NOT unsafe-to-concat, 2.
				   shape the segment from beginning of the line to
				   that position, 3. check whether the resulting
				   glyph-run also is clear of the unsafe-to-concat
				   at its end-of-text position; if it is, just splice
				   it into place and the beginning is shaped; If not,
				   move on to a position further forward that is clear
				   of unsafe-to-concat and retry up to there, and repeat.
				   A slight complication will arise in the
				   implementation of the algorithm above,
				   because while our buffer API has a way to
				   return flags for position corresponding to
				   start-of-text, there is currently no position
				   corresponding to end-of-text.  This limitation
				   can be alleviated by shaping more text than needed
				   and looking for unsafe-to-concat flag within text
				   clusters.
				   The <link linkend="HB-GLYPH-FLAG-UNSAFE-TO-BREAK:CAPS"><type>HB_GLYPH_FLAG_UNSAFE_TO_BREAK</type></link> flag will
				   always imply this flag.
			   To use this flag, you must enable the buffer flag
			   <parameter>HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT</parameter>
 during
			   shaping, otherwise the buffer flag will not be
			   reliably produced.
				   Since: 4.0.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-GLYPH-FLAG-SAFE-TO-INSERT-TATWEEL:CAPS">HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL</para></entry>
<entry role="enum_member_description"><para>In scripts that use elongation (Arabic,
				   Mongolian, Syriac, etc.), this flag signifies
				   that it is safe to insert a U+0640 TATWEEL
				   character before this cluster for elongation.
				   This flag does not determine the
				   script-specific elongation places, but only
				   when it is safe to do the elongation without
				   interrupting text shaping.
				   Since: 5.1.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-GLYPH-FLAG-DEFINED:CAPS">HB_GLYPH_FLAG_DEFINED</para></entry>
<entry role="enum_member_description"><para>All the currently defined flags.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.5.0">1.5.0</link></para></refsect2>
<refsect2 id="hb-glyph-position-t" role="struct">
<title>hb_glyph_position_t</title>
<indexterm zone="hb-glyph-position-t"><primary>hb_glyph_position_t</primary></indexterm>
<programlisting language="C">typedef struct {
  hb_position_t  x_advance;
  hb_position_t  y_advance;
  hb_position_t  x_offset;
  hb_position_t  y_offset;
} hb_glyph_position_t;
</programlisting>
<para>The <link linkend="hb-glyph-position-t"><type>hb_glyph_position_t</type></link> is the structure that holds the positions of the
glyph in both horizontal and vertical directions. All positions in
<link linkend="hb-glyph-position-t"><type>hb_glyph_position_t</type></link> are relative to the current point.</para>
<refsect3 id="hb-glyph-position-t.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-position-t"><type>hb_position_t</type></link>&#160;<structfield id="hb-glyph-position-t.x-advance">x_advance</structfield>;</para></entry>
<entry role="struct_member_description"><para>how much the line advances after drawing this glyph when setting
text in horizontal direction.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-position-t"><type>hb_position_t</type></link>&#160;<structfield id="hb-glyph-position-t.y-advance">y_advance</structfield>;</para></entry>
<entry role="struct_member_description"><para>how much the line advances after drawing this glyph when setting
text in vertical direction.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-position-t"><type>hb_position_t</type></link>&#160;<structfield id="hb-glyph-position-t.x-offset">x_offset</structfield>;</para></entry>
<entry role="struct_member_description"><para>how much the glyph moves on the X-axis before drawing it, this
should not affect how much the line advances.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-position-t"><type>hb_position_t</type></link>&#160;<structfield id="hb-glyph-position-t.y-offset">y_offset</structfield>;</para></entry>
<entry role="struct_member_description"><para>how much the glyph moves on the Y-axis before drawing it, this
should not affect how much the line advances.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="hb-buffer-content-type-t" role="enum">
<title>enum hb_buffer_content_type_t</title>
<indexterm zone="hb-buffer-content-type-t"><primary>hb_buffer_content_type_t</primary></indexterm>
<para>The type of <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link> contents.</para>
<refsect3 id="hb-buffer-content-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CONTENT-TYPE-INVALID:CAPS">HB_BUFFER_CONTENT_TYPE_INVALID</para></entry>
<entry role="enum_member_description"><para>Initial value for new buffer.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CONTENT-TYPE-UNICODE:CAPS">HB_BUFFER_CONTENT_TYPE_UNICODE</para></entry>
<entry role="enum_member_description"><para>The buffer contains input characters (before shaping).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CONTENT-TYPE-GLYPHS:CAPS">HB_BUFFER_CONTENT_TYPE_GLYPHS</para></entry>
<entry role="enum_member_description"><para>The buffer contains output glyphs (after shaping).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="hb-buffer-flags-t" role="enum" condition="since:0.9.20">
<title>enum hb_buffer_flags_t</title>
<indexterm zone="hb-buffer-flags-t" role="0.9.20"><primary>hb_buffer_flags_t</primary></indexterm>
<para>Flags for <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>.</para>
<refsect3 id="hb-buffer-flags-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-DEFAULT:CAPS">HB_BUFFER_FLAG_DEFAULT</para></entry>
<entry role="enum_member_description"><para>the default buffer flag.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-BOT:CAPS">HB_BUFFER_FLAG_BOT</para></entry>
<entry role="enum_member_description"><para>flag indicating that special handling of the beginning
of text paragraph can be applied to this buffer. Should usually
be set, unless you are passing to the buffer only part
of the text without the full context.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-EOT:CAPS">HB_BUFFER_FLAG_EOT</para></entry>
<entry role="enum_member_description"><para>flag indicating that special handling of the end of text
paragraph can be applied to this buffer, similar to
<parameter>HB_BUFFER_FLAG_BOT</parameter>
.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-PRESERVE-DEFAULT-IGNORABLES:CAPS">HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES</para></entry>
<entry role="enum_member_description"><para>flag indication that character with Default_Ignorable
Unicode property should use the corresponding glyph
from the font, instead of hiding them (done by
replacing them with the space glyph and zeroing the
advance width.)  This flag takes precedence over
<parameter>HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES</parameter>
.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-REMOVE-DEFAULT-IGNORABLES:CAPS">HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES</para></entry>
<entry role="enum_member_description"><para>flag indication that character with Default_Ignorable
Unicode property should be removed from glyph string
instead of hiding them (done by replacing them with the
space glyph and zeroing the advance width.)
<parameter>HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES</parameter>
 takes
precedence over this flag. Since: 1.8.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-DO-NOT-INSERT-DOTTED-CIRCLE:CAPS">HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE</para></entry>
<entry role="enum_member_description"><para>flag indicating that a dotted circle should
not be inserted in the rendering of incorrect
character sequences (such at &lt;0905 093E>). Since: 2.4.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-VERIFY:CAPS">HB_BUFFER_FLAG_VERIFY</para></entry>
<entry role="enum_member_description"><para>flag indicating that the <link linkend="hb-shape"><function>hb_shape()</function></link> call and its variants
should perform various verification processes on the results
of the shaping operation on the buffer.  If the verification
fails, then either a buffer message is sent, if a message
handler is installed on the buffer, or a message is written
to standard error.  In either case, the shaping result might
be modified to show the failed output. Since: 3.4.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-PRODUCE-UNSAFE-TO-CONCAT:CAPS">HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT</para></entry>
<entry role="enum_member_description"><para>flag indicating that the <parameter>HB_GLYPH_FLAG_UNSAFE_TO_CONCAT</parameter>

glyph-flag should be produced by the shaper. By default
it will not be produced since it incurs a cost. Since: 4.0.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-PRODUCE-SAFE-TO-INSERT-TATWEEL:CAPS">HB_BUFFER_FLAG_PRODUCE_SAFE_TO_INSERT_TATWEEL</para></entry>
<entry role="enum_member_description"><para>flag indicating that the <parameter>HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL</parameter>

glyph-flag should be produced by the shaper. By default
it will not be produced. Since: 5.1.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-FLAG-DEFINED:CAPS">HB_BUFFER_FLAG_DEFINED</para></entry>
<entry role="enum_member_description"><para>All currently defined flags: Since: 4.4.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.20">0.9.20</link></para></refsect2>
<refsect2 id="hb-buffer-cluster-level-t" role="enum" condition="since:0.9.42">
<title>enum hb_buffer_cluster_level_t</title>
<indexterm zone="hb-buffer-cluster-level-t" role="0.9.42"><primary>hb_buffer_cluster_level_t</primary></indexterm>
<para>Data type for holding HarfBuzz's clustering behavior options. The cluster level
dictates one aspect of how HarfBuzz will treat non-base characters

during shaping.</para>
<para>In <parameter>HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES</parameter>
, non-base
characters are merged into the cluster of the base character that precedes them.</para>
<para>In <parameter>HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS</parameter>
, non-base characters are initially
assigned their own cluster values, which are not merged into preceding base
clusters. This allows HarfBuzz to perform additional operations like reorder
sequences of adjacent marks.</para>
<para><parameter>HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES</parameter>
 is the default, because it maintains
backward compatibility with older versions of HarfBuzz. New client programs that
do not need to maintain such backward compatibility are recommended to use
<parameter>HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS</parameter>
 instead of the default.</para>
<refsect3 id="hb-buffer-cluster-level-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CLUSTER-LEVEL-MONOTONE-GRAPHEMES:CAPS">HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES</para></entry>
<entry role="enum_member_description"><para>Return cluster values grouped by graphemes into
monotone order.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CLUSTER-LEVEL-MONOTONE-CHARACTERS:CAPS">HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS</para></entry>
<entry role="enum_member_description"><para>Return cluster values grouped into monotone order.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CLUSTER-LEVEL-CHARACTERS:CAPS">HB_BUFFER_CLUSTER_LEVEL_CHARACTERS</para></entry>
<entry role="enum_member_description"><para>Don't group cluster values.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-CLUSTER-LEVEL-DEFAULT:CAPS">HB_BUFFER_CLUSTER_LEVEL_DEFAULT</para></entry>
<entry role="enum_member_description"><para>Default cluster level,
equal to <parameter>HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES</parameter>
.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.42">0.9.42</link></para></refsect2>
<refsect2 id="hb-segment-properties-t" role="struct">
<title>hb_segment_properties_t</title>
<indexterm zone="hb-segment-properties-t"><primary>hb_segment_properties_t</primary></indexterm>
<programlisting language="C">typedef struct {
  hb_direction_t  direction;
  hb_script_t     script;
  hb_language_t   language;
} hb_segment_properties_t;
</programlisting>
<para>The structure that holds various text properties of an <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>. Can be
set and retrieved using <link linkend="hb-buffer-set-segment-properties"><function>hb_buffer_set_segment_properties()</function></link> and
<link linkend="hb-buffer-get-segment-properties"><function>hb_buffer_get_segment_properties()</function></link>, respectively.</para>
<refsect3 id="hb-segment-properties-t.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-direction-t"><type>hb_direction_t</type></link>&#160;<structfield id="hb-segment-properties-t.direction">direction</structfield>;</para></entry>
<entry role="struct_member_description"><para>the <link linkend="hb-direction-t"><type>hb_direction_t</type></link> of the buffer, see <link linkend="hb-buffer-set-direction"><function>hb_buffer_set_direction()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-script-t"><type>hb_script_t</type></link>&#160;<structfield id="hb-segment-properties-t.script">script</structfield>;</para></entry>
<entry role="struct_member_description"><para>the <link linkend="hb-script-t"><type>hb_script_t</type></link> of the buffer, see <link linkend="hb-buffer-set-script"><function>hb_buffer_set_script()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="hb-language-t"><type>hb_language_t</type></link>&#160;<structfield id="hb-segment-properties-t.language">language</structfield>;</para></entry>
<entry role="struct_member_description"><para>the <link linkend="hb-language-t"><type>hb_language_t</type></link> of the buffer, see <link linkend="hb-buffer-set-language"><function>hb_buffer_set_language()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="hb-buffer-serialize-format-t" role="enum" condition="since:0.9.2">
<title>enum hb_buffer_serialize_format_t</title>
<indexterm zone="hb-buffer-serialize-format-t" role="0.9.2"><primary>hb_buffer_serialize_format_t</primary></indexterm>
<para>The buffer serialization and de-serialization format used in
<link linkend="hb-buffer-serialize-glyphs"><function>hb_buffer_serialize_glyphs()</function></link> and <link linkend="hb-buffer-deserialize-glyphs"><function>hb_buffer_deserialize_glyphs()</function></link>.</para>
<refsect3 id="hb-buffer-serialize-format-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FORMAT-TEXT:CAPS">HB_BUFFER_SERIALIZE_FORMAT_TEXT</para></entry>
<entry role="enum_member_description"><para>a human-readable, plain text format.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FORMAT-JSON:CAPS">HB_BUFFER_SERIALIZE_FORMAT_JSON</para></entry>
<entry role="enum_member_description"><para>a machine-readable JSON format.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FORMAT-INVALID:CAPS">HB_BUFFER_SERIALIZE_FORMAT_INVALID</para></entry>
<entry role="enum_member_description"><para>invalid format.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.2">0.9.2</link></para></refsect2>
<refsect2 id="hb-buffer-serialize-flags-t" role="enum" condition="since:0.9.20">
<title>enum hb_buffer_serialize_flags_t</title>
<indexterm zone="hb-buffer-serialize-flags-t" role="0.9.20"><primary>hb_buffer_serialize_flags_t</primary></indexterm>
<para>Flags that control what glyph information are serialized in <link linkend="hb-buffer-serialize-glyphs"><function>hb_buffer_serialize_glyphs()</function></link>.</para>
<refsect3 id="hb-buffer-serialize-flags-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-DEFAULT:CAPS">HB_BUFFER_SERIALIZE_FLAG_DEFAULT</para></entry>
<entry role="enum_member_description"><para>serialize glyph names, clusters and positions.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-NO-CLUSTERS:CAPS">HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS</para></entry>
<entry role="enum_member_description"><para>do not serialize glyph cluster.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-NO-POSITIONS:CAPS">HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS</para></entry>
<entry role="enum_member_description"><para>do not serialize glyph position information.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-NO-GLYPH-NAMES:CAPS">HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES</para></entry>
<entry role="enum_member_description"><para>do no serialize glyph name.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-GLYPH-EXTENTS:CAPS">HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS</para></entry>
<entry role="enum_member_description"><para>serialize glyph extents.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-GLYPH-FLAGS:CAPS">HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS</para></entry>
<entry role="enum_member_description"><para>serialize glyph flags. Since: 1.5.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-NO-ADVANCES:CAPS">HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES</para></entry>
<entry role="enum_member_description"><para>do not serialize glyph advances,
glyph offsets will reflect absolute glyph positions. Since: 1.8.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-SERIALIZE-FLAG-DEFINED:CAPS">HB_BUFFER_SERIALIZE_FLAG_DEFINED</para></entry>
<entry role="enum_member_description"><para>All currently defined flags. Since: 4.4.0</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.9.20">0.9.20</link></para></refsect2>
<refsect2 id="hb-buffer-diff-flags-t" role="enum" condition="since:1.5.0">
<title>enum hb_buffer_diff_flags_t</title>
<indexterm zone="hb-buffer-diff-flags-t" role="1.5.0"><primary>hb_buffer_diff_flags_t</primary></indexterm>
<para>Flags from comparing two <link linkend="hb-buffer-t"><type>hb_buffer_t</type></link>'s.</para>
<para>Buffer with different <link linkend="hb-buffer-content-type-t"><type>hb_buffer_content_type_t</type></link> cannot be meaningfully
compared in any further detail.</para>
<para>For buffers with differing length, the per-glyph comparison is not
attempted, though we do still scan reference buffer for dotted circle and
<literal>.notdef</literal> glyphs.</para>
<para>If the buffers have the same length, we compare them glyph-by-glyph and
report which aspect(s) of the glyph info/position are different.</para>
<refsect3 id="hb-buffer-diff-flags-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-EQUAL:CAPS">HB_BUFFER_DIFF_FLAG_EQUAL</para></entry>
<entry role="enum_member_description"><para>equal buffers.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-CONTENT-TYPE-MISMATCH:CAPS">HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH</para></entry>
<entry role="enum_member_description"><para>buffers with different
<link linkend="hb-buffer-content-type-t"><type>hb_buffer_content_type_t</type></link>.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-LENGTH-MISMATCH:CAPS">HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH</para></entry>
<entry role="enum_member_description"><para>buffers with differing length.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-NOTDEF-PRESENT:CAPS">HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT</para></entry>
<entry role="enum_member_description"><para><literal>.notdef</literal> glyph is present in the
reference buffer.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-DOTTED-CIRCLE-PRESENT:CAPS">HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT</para></entry>
<entry role="enum_member_description"><para>dotted circle glyph is present
in the reference buffer.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-CODEPOINT-MISMATCH:CAPS">HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH</para></entry>
<entry role="enum_member_description"><para>difference in <link linkend="hb-glyph-info-t.codepoint"><type>hb_glyph_info_t.codepoint</type></link></para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-CLUSTER-MISMATCH:CAPS">HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH</para></entry>
<entry role="enum_member_description"><para>difference in <link linkend="hb-glyph-info-t.cluster"><type>hb_glyph_info_t.cluster</type></link></para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-GLYPH-FLAGS-MISMATCH:CAPS">HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH</para></entry>
<entry role="enum_member_description"><para>difference in <link linkend="hb-glyph-flags-t"><type>hb_glyph_flags_t</type></link>.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="HB-BUFFER-DIFF-FLAG-POSITION-MISMATCH:CAPS">HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH</para></entry>
<entry role="enum_member_description"><para>difference in <link linkend="hb-glyph-position-t"><type>hb_glyph_position_t</type></link>.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-1.5.0">1.5.0</link></para></refsect2>

</refsect1>

</refentry>
